swagger: "2.0"
info:
  title: model/user/user.proto
  version: version not set
tags:
  - name: AuthService
  - name: MemoService
  - name: UserService
  - name: WorkspaceService
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/auth/signin:
    post:
      summary: SignIn signs in the user with the given username and password.
      operationId: AuthService_SignIn
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/userUser'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: username
          description: The username to sign in with.
          in: query
          required: false
          type: string
        - name: password
          description: The password to sign in with.
          in: query
          required: false
          type: string
        - name: neverExpire
          description: Whether the session should never expire.
          in: query
          required: false
          type: boolean
      tags:
        - AuthService
  /api/v1/auth/signout:
    post:
      summary: SignOut signs out the user.
      operationId: AuthService_SignOut
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - AuthService
  /api/v1/auth/signup:
    post:
      summary: SignUp signs up the user with the given username and password.
      operationId: AuthService_SignUp
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/userUser'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: username
          description: The username to sign up with.
          in: query
          required: false
          type: string
        - name: password
          description: The password to sign up with.
          in: query
          required: false
          type: string
      tags:
        - AuthService
  /api/v1/auth/status:
    post:
      summary: GetAuthStatus returns the current auth status of the user.
      operationId: AuthService_GetAuthStatus
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/userUser'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - AuthService
  /api/v1/memos:
    get:
      summary: ListMemos lists memos with pagination and filter.
      operationId: MemoService_ListMemos
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListMemosResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - MemoService
    post:
      summary: CreateMemo creates a memo.
      operationId: MemoService_CreateMemo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/memoMemo'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          in: query
          required: false
          type: string
      tags:
        - MemoService
  /api/v1/memos/*:
    get:
      summary: GetMemo gets a memo.
      operationId: MemoService_GetMemo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/memoMemo'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - MemoService
  /api/v1/user/users:
    post:
      summary: CreateUser creates a new user.
      operationId: UserService_CreateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/userUser'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          in: query
          required: false
          type: string
        - name: username
          in: query
          required: false
          type: string
        - name: email
          in: query
          required: false
          type: string
        - name: nickname
          in: query
          required: false
          type: string
        - name: avatarUrl
          in: query
          required: false
          type: string
        - name: description
          in: query
          required: false
          type: string
        - name: password
          in: query
          required: false
          type: string
      tags:
        - UserService
  /api/v1/workspace/profile:
    get:
      summary: GetProfile returns the workspace profile.
      operationId: WorkspaceService_GetProfile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/workspaceProfile'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - WorkspaceService
definitions:
  memoMemo:
    type: object
    properties:
      id:
        type: string
        format: int64
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  userUser:
    type: object
    properties:
      id:
        type: string
        format: int64
      username:
        type: string
      nickname:
        type: string
      email:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  v1ListMemosResponse:
    type: object
  workspaceProfile:
    type: object
    properties:
      owner:
        type: string
        title: |-
          The name of instance owner.
          Format: users/{user}
      version:
        type: string
        title: version is the current version of instance
      mode:
        type: string
        description: mode is the instance mode (e.g. "prod", "dev" or "demo").
      instanceUrl:
        type: string
        description: instance_url is the URL of the instance.
