swagger: "2.0"
info:
  title: model/common/common.proto
  version: version not set
tags:
  - name: AuthService
  - name: MarkdownService
  - name: MemoService
  - name: UserService
  - name: WorkspaceService
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/auth/signin:
    post:
      summary: SignIn signs in the user with the given username and password.
      operationId: AuthService_SignIn
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/userUser'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: username
          description: The username to sign in with.
          in: query
          required: false
          type: string
        - name: password
          description: The password to sign in with.
          in: query
          required: false
          type: string
        - name: neverExpire
          description: Whether the session should never expire.
          in: query
          required: false
          type: boolean
      tags:
        - AuthService
  /api/v1/auth/signout:
    post:
      summary: SignOut signs out the user.
      operationId: AuthService_SignOut
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - AuthService
  /api/v1/auth/signup:
    post:
      summary: SignUp signs up the user with the given username and password.
      operationId: AuthService_SignUp
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/userUser'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: username
          description: The username to sign up with.
          in: query
          required: false
          type: string
        - name: password
          description: The password to sign up with.
          in: query
          required: false
          type: string
      tags:
        - AuthService
  /api/v1/auth/status:
    post:
      summary: GetAuthStatus returns the current auth status of the user.
      operationId: AuthService_GetAuthStatus
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/userUser'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - AuthService
  /api/v1/identityProviders:
    get:
      summary: ListIdentityProviders lists identity providers.
      operationId: WorkspaceService_ListIdentityProviders
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListIdentityProvidersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - WorkspaceService
  /api/v1/inboxes:
    get:
      summary: ListInboxes lists inboxes for a user.
      operationId: WorkspaceService_ListInboxes
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListInboxesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user
          description: 'Format: users/{user}'
          in: query
          required: false
          type: string
        - name: pageSize
          description: The maximum number of inbox to return.
          in: query
          required: false
          type: integer
          format: int32
        - name: pageToken
          description: Provide this to retrieve the subsequent page.
          in: query
          required: false
          type: string
      tags:
        - WorkspaceService
  /api/v1/markdown/link:metadata:
    get:
      summary: GetLinkMetadata returns metadata for a given link.
      operationId: MarkdownService_GetLinkMetadata
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/markdownLinkMetadata'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: link
          in: query
          required: false
          type: string
      tags:
        - MarkdownService
  /api/v1/markdown/node:restore:
    post:
      summary: RestoreMarkdownNodes restores the given nodes to markdown content.
      operationId: MarkdownService_RestoreMarkdownNodes
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RestoreMarkdownNodesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RestoreMarkdownNodesRequest'
      tags:
        - MarkdownService
  /api/v1/markdown/node:stringify:
    post:
      summary: StringifyMarkdownNodes stringify the given nodes to plain text content.
      operationId: MarkdownService_StringifyMarkdownNodes
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1StringifyMarkdownNodesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1StringifyMarkdownNodesRequest'
      tags:
        - MarkdownService
  /api/v1/markdown:parse:
    post:
      summary: ParseMarkdown parses the given markdown content and returns a list of nodes.
      operationId: MarkdownService_ParseMarkdown
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ParseMarkdownResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ParseMarkdownRequest'
      tags:
        - MarkdownService
  /api/v1/memos:
    get:
      summary: ListMemos lists memos with pagination and filter.
      operationId: MemoService_ListMemos
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListMemosResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent is the owner of the memos.
            If not specified or `users/-`, it will list all memos.
          in: query
          required: false
          type: string
        - name: pageSize
          description: The maximum number of memos to return.
          in: query
          required: false
          type: integer
          format: int32
        - name: pageToken
          description: |-
            A page token, received from a previous `ListMemos` call.
            Provide this to retrieve the subsequent page.
          in: query
          required: false
          type: string
        - name: state
          description: |-
            The state of the memos to list.
            Default to `NORMAL`. Set to `ARCHIVED` to list archived memos.
          in: query
          required: false
          type: string
          enum:
            - STATE_UNSPECIFIED
            - NORMAL
            - ARCHIVED
          default: STATE_UNSPECIFIED
        - name: sort
          description: |-
            What field to sort the results by.
            Default to display_time.
          in: query
          required: false
          type: string
        - name: direction
          description: |-
            The direction to sort the results by.
            Default to DESC.
          in: query
          required: false
          type: string
          enum:
            - DIRECTION_UNSPECIFIED
            - ASC
            - DESC
          default: DIRECTION_UNSPECIFIED
        - name: filter
          description: |-
            Filter is a CEL expression to filter memos.
            Refer to `Shortcut.filter`.
          in: query
          required: false
          type: string
        - name: oldFilter
          description: |-
            [Deprecated] Old filter contains some specific conditions to filter memos.
            Format: "creator == 'users/{user}' && visibilities == ['PUBLIC', 'PROTECTED']"
          in: query
          required: false
          type: string
      tags:
        - MemoService
    post:
      summary: CreateMemo creates a memo.
      operationId: MemoService_CreateMemo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/memoMemo'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: memo.name
          description: |-
            The name of the memo.
            Format: memos/{memo}, memo is the user defined id or uuid.
          in: query
          required: false
          type: string
        - name: memo.state
          in: query
          required: false
          type: string
          enum:
            - STATE_UNSPECIFIED
            - NORMAL
            - ARCHIVED
          default: STATE_UNSPECIFIED
        - name: memo.creator
          description: |-
            The name of the creator.
            Format: users/{user}
          in: query
          required: false
          type: string
        - name: memo.createTime
          in: query
          required: false
          type: string
          format: date-time
        - name: memo.updateTime
          in: query
          required: false
          type: string
          format: date-time
        - name: memo.displayTime
          in: query
          required: false
          type: string
          format: date-time
        - name: memo.content
          in: query
          required: false
          type: string
        - name: memo.visibility
          in: query
          required: false
          type: string
          enum:
            - VISIBILITY_UNSPECIFIED
            - PRIVATE
            - PROTECTED
            - PUBLIC
          default: VISIBILITY_UNSPECIFIED
        - name: memo.tags
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: memo.pinned
          in: query
          required: false
          type: boolean
        - name: memo.property.hasLink
          in: query
          required: false
          type: boolean
        - name: memo.property.hasTaskList
          in: query
          required: false
          type: boolean
        - name: memo.property.hasCode
          in: query
          required: false
          type: boolean
        - name: memo.property.hasIncompleteTasks
          in: query
          required: false
          type: boolean
        - name: memo.parent
          description: |-
            The name of the parent memo.
            Format: memos/{id}
          in: query
          required: false
          type: string
        - name: memo.snippet
          description: The snippet of the memo content. Plain text only.
          in: query
          required: false
          type: string
        - name: memo.location.placeholder
          in: query
          required: false
          type: string
        - name: memo.location.latitude
          in: query
          required: false
          type: number
          format: double
        - name: memo.location.longitude
          in: query
          required: false
          type: number
          format: double
      tags:
        - MemoService
  /api/v1/memos/*:
    get:
      summary: GetMemo gets a memo.
      operationId: MemoService_GetMemo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/memoMemo'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - MemoService
  /api/v1/user/users:
    post:
      summary: CreateUser creates a new user.
      operationId: UserService_CreateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/userUser'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          in: query
          required: false
          type: string
        - name: username
          in: query
          required: false
          type: string
        - name: email
          in: query
          required: false
          type: string
        - name: nickname
          in: query
          required: false
          type: string
        - name: avatarUrl
          in: query
          required: false
          type: string
        - name: description
          in: query
          required: false
          type: string
        - name: password
          in: query
          required: false
          type: string
      tags:
        - UserService
  /api/v1/users/-/stats:
    post:
      summary: ListAllUserStats returns all user stats.
      operationId: UserService_ListAllUserStats
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListAllUserStatsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - UserService
  /api/v1/workspace/profile:
    get:
      summary: GetProfile returns the workspace profile.
      operationId: WorkspaceService_GetWorkspaceProfile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/workspaceProfile'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - WorkspaceService
  /api/v1/workspace/{name}:
    get:
      summary: GetWorkspaceSetting returns the setting by name.
      operationId: WorkspaceService_GetWorkspaceSetting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/workspaceSetting'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            The resource name of the workspace setting.
            Format: settings/{setting}
          in: path
          required: true
          type: string
          pattern: settings/[^/]+
      tags:
        - WorkspaceService
  /api/v1/workspace/{setting.name}:
    patch:
      summary: SetWorkspaceSetting updates the setting.
      operationId: WorkspaceService_SetWorkspaceSetting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/workspaceSetting'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: setting.name
          description: |-
            name is the name of the setting.
            Format: settings/{setting}
          in: path
          required: true
          type: string
          pattern: settings/[^/]+
        - name: setting
          description: setting is the setting to update.
          in: body
          required: true
          schema:
            type: object
            properties:
              generalSetting:
                $ref: '#/definitions/workspaceGeneralSetting'
              storageSetting:
                $ref: '#/definitions/workspaceStorageSetting'
              memoRelatedSetting:
                $ref: '#/definitions/workspaceMemoRelatedSetting'
            title: setting is the setting to update.
      tags:
        - WorkspaceService
  /api/v1/{inbox.name}:
    patch:
      summary: UpdateInbox updates an inbox.
      operationId: WorkspaceService_UpdateInbox
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/workspaceInbox'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: inbox.name
          description: |-
            The name of the inbox.
            Format: inboxes/{id}, id is the system generated auto-incremented id.
          in: path
          required: true
          type: string
          pattern: inboxes/[^/]+
        - name: inbox
          in: body
          required: true
          schema:
            type: object
            properties:
              sender:
                type: string
                title: 'Format: users/{user}'
              receiver:
                type: string
                title: 'Format: users/{user}'
              status:
                $ref: '#/definitions/workspaceInboxStatus'
              createTime:
                type: string
                format: date-time
              type:
                $ref: '#/definitions/workspaceInboxType'
              activityId:
                type: integer
                format: int32
      tags:
        - WorkspaceService
  /api/v1/{memo.name}:
    patch:
      summary: UpdateMemo updates a memo.
      operationId: MemoService_UpdateMemo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/memoMemo'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: memo.name
          description: |-
            The name of the memo.
            Format: memos/{memo}, memo is the user defined id or uuid.
          in: path
          required: true
          type: string
          pattern: memos/[^/]+
        - name: memo
          description: |-
            The memo to update.
            The `name` field is required.
          in: body
          required: true
          schema:
            type: object
            properties:
              state:
                $ref: '#/definitions/commonState'
              creator:
                type: string
                title: |-
                  The name of the creator.
                  Format: users/{user}
              createTime:
                type: string
                format: date-time
              updateTime:
                type: string
                format: date-time
              displayTime:
                type: string
                format: date-time
              content:
                type: string
              nodes:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/markdownNode'
                readOnly: true
              visibility:
                $ref: '#/definitions/memoVisibility'
              tags:
                type: array
                items:
                  type: string
                readOnly: true
              pinned:
                type: boolean
              resources:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/memoResource'
              relations:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/memoMemoRelation'
              reactions:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/memoReaction'
                readOnly: true
              property:
                $ref: '#/definitions/MemoProperty'
                readOnly: true
              parent:
                type: string
                title: |-
                  The name of the parent memo.
                  Format: memos/{id}
                readOnly: true
              snippet:
                type: string
                description: The snippet of the memo content. Plain text only.
                readOnly: true
              location:
                $ref: '#/definitions/memoLocation'
                description: The location of the memo.
            title: |-
              The memo to update.
              The `name` field is required.
            required:
              - memo
      tags:
        - MemoService
  /api/v1/{name_1}:
    delete:
      summary: DeleteInbox deletes an inbox.
      operationId: WorkspaceService_DeleteInbox
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_1
          description: The name of the inbox to delete.
          in: path
          required: true
          type: string
          pattern: inboxes/[^/]+
      tags:
        - WorkspaceService
  /api/v1/{name}:
    get:
      summary: GetIdentityProvider gets an identity provider.
      operationId: WorkspaceService_GetIdentityProvider
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/workspaceIdentityProvider'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: The name of the identityProvider to get.
          in: path
          required: true
          type: string
          pattern: identityProviders/[^/]+
      tags:
        - WorkspaceService
    delete:
      summary: DeleteMemo deletes a memo.
      operationId: MemoService_DeleteMemo
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: The name of the memo.
          in: path
          required: true
          type: string
          pattern: memos/[^/]+
      tags:
        - MemoService
  /api/v1/{name}/access_tokens:
    post:
      summary: CreateUserAccessToken creates a new access token for a user.
      operationId: UserService_CreateAccessToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/userAccessToken'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: The name of the user.
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserServiceCreateAccessTokenBody'
      tags:
        - UserService
  /api/v1/{name}/setting:
    get:
      summary: GetUserSetting gets the setting of a user.
      operationId: UserService_GetUserSetting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/userSetting'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: The name of the user.
          in: path
          required: true
          type: string
          pattern: users/[^/]+
      tags:
        - UserService
  /api/v1/{name}/stats:
    get:
      summary: GetUserStats returns the stats of a user.
      operationId: UserService_GetUserStats
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/userStats'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: The name of the user.
          in: path
          required: true
          type: string
          pattern: users/[^/]+
      tags:
        - UserService
  /api/v1/{setting.name}:
    patch:
      summary: UpdateUserSetting updates the setting of a user.
      operationId: UserService_UpdateUserSetting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/userSetting'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: setting.name
          description: The name of the user.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/setting
        - name: setting
          in: body
          required: true
          schema:
            type: object
            properties:
              locale:
                type: string
                description: The preferred locale of the user.
              appearance:
                type: string
                description: The preferred appearance of the user.
              memoVisibility:
                type: string
                description: The default visibility of the memo.
            required:
              - setting
      tags:
        - UserService
definitions:
  ListNodeKind:
    type: string
    enum:
      - KIND_UNSPECIFIED
      - ORDERED
      - UNORDERED
      - DESCRIPTION
    default: KIND_UNSPECIFIED
  MemoProperty:
    type: object
    properties:
      hasLink:
        type: boolean
      hasTaskList:
        type: boolean
      hasCode:
        type: boolean
      hasIncompleteTasks:
        type: boolean
  StatsMemoTypeStats:
    type: object
    properties:
      linkCount:
        type: integer
        format: int32
      codeCount:
        type: integer
        format: int32
      todoCount:
        type: integer
        format: int32
      undoCount:
        type: integer
        format: int32
  StorageSettingS3Config:
    type: object
    properties:
      accessKeyId:
        type: string
      accessKeySecret:
        type: string
      endpoint:
        type: string
      region:
        type: string
      bucket:
        type: string
      usePathStyle:
        type: boolean
    title: 'Reference: https://developers.cloudflare.com/r2/examples/aws/aws-sdk-go/'
  StorageSettingStorageType:
    type: string
    enum:
      - STORAGE_TYPE_UNSPECIFIED
      - DATABASE
      - LOCAL
      - S3
    default: STORAGE_TYPE_UNSPECIFIED
    description: |2-
       - DATABASE: DATABASE is the database storage type.
       - LOCAL: LOCAL is the local storage type.
       - S3: S3 is the S3 storage type.
  TableNodeRow:
    type: object
    properties:
      cells:
        type: array
        items:
          type: object
          $ref: '#/definitions/markdownNode'
  UserRole:
    type: string
    enum:
      - ROLE_UNSPECIFIED
      - HOST
      - ADMIN
      - USER
    default: ROLE_UNSPECIFIED
  UserServiceCreateAccessTokenBody:
    type: object
    properties:
      description:
        type: string
      expiresAt:
        type: string
        format: date-time
  commonDirection:
    type: string
    enum:
      - DIRECTION_UNSPECIFIED
      - ASC
      - DESC
    default: DIRECTION_UNSPECIFIED
  commonState:
    type: string
    enum:
      - STATE_UNSPECIFIED
      - NORMAL
      - ARCHIVED
    default: STATE_UNSPECIFIED
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  markdownAutoLinkNode:
    type: object
    properties:
      url:
        type: string
      isRawText:
        type: boolean
  markdownBlockquoteNode:
    type: object
    properties:
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/markdownNode'
  markdownBoldItalicNode:
    type: object
    properties:
      symbol:
        type: string
      content:
        type: string
  markdownBoldNode:
    type: object
    properties:
      symbol:
        type: string
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/markdownNode'
  markdownCodeBlockNode:
    type: object
    properties:
      language:
        type: string
      content:
        type: string
  markdownCodeNode:
    type: object
    properties:
      content:
        type: string
  markdownEmbeddedContentNode:
    type: object
    properties:
      resourceName:
        type: string
      params:
        type: string
  markdownEscapingCharacterNode:
    type: object
    properties:
      symbol:
        type: string
  markdownHTMLElementNode:
    type: object
    properties:
      tagName:
        type: string
      attributes:
        type: object
        additionalProperties:
          type: string
  markdownHeadingNode:
    type: object
    properties:
      level:
        type: integer
        format: int32
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/markdownNode'
  markdownHighlightNode:
    type: object
    properties:
      content:
        type: string
  markdownHorizontalRuleNode:
    type: object
    properties:
      symbol:
        type: string
  markdownImageNode:
    type: object
    properties:
      altText:
        type: string
      url:
        type: string
  markdownItalicNode:
    type: object
    properties:
      symbol:
        type: string
      content:
        type: string
  markdownLineBreakNode:
    type: object
  markdownLinkMetadata:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      image:
        type: string
  markdownLinkNode:
    type: object
    properties:
      content:
        type: array
        items:
          type: object
          $ref: '#/definitions/markdownNode'
      url:
        type: string
  markdownListNode:
    type: object
    properties:
      kind:
        $ref: '#/definitions/ListNodeKind'
      indent:
        type: integer
        format: int32
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/markdownNode'
  markdownMathBlockNode:
    type: object
    properties:
      content:
        type: string
  markdownMathNode:
    type: object
    properties:
      content:
        type: string
  markdownNode:
    type: object
    properties:
      type:
        $ref: '#/definitions/markdownNodeType'
      lineBreakNode:
        $ref: '#/definitions/markdownLineBreakNode'
        description: Block nodes.
      paragraphNode:
        $ref: '#/definitions/markdownParagraphNode'
      codeBlockNode:
        $ref: '#/definitions/markdownCodeBlockNode'
      headingNode:
        $ref: '#/definitions/markdownHeadingNode'
      horizontalRuleNode:
        $ref: '#/definitions/markdownHorizontalRuleNode'
      blockquoteNode:
        $ref: '#/definitions/markdownBlockquoteNode'
      listNode:
        $ref: '#/definitions/markdownListNode'
      orderedListItemNode:
        $ref: '#/definitions/markdownOrderedListItemNode'
      unorderedListItemNode:
        $ref: '#/definitions/markdownUnorderedListItemNode'
      taskListItemNode:
        $ref: '#/definitions/markdownTaskListItemNode'
      mathBlockNode:
        $ref: '#/definitions/markdownMathBlockNode'
      tableNode:
        $ref: '#/definitions/markdownTableNode'
      embeddedContentNode:
        $ref: '#/definitions/markdownEmbeddedContentNode'
      textNode:
        $ref: '#/definitions/markdownTextNode'
        description: Inline nodes.
      boldNode:
        $ref: '#/definitions/markdownBoldNode'
      italicNode:
        $ref: '#/definitions/markdownItalicNode'
      boldItalicNode:
        $ref: '#/definitions/markdownBoldItalicNode'
      codeNode:
        $ref: '#/definitions/markdownCodeNode'
      imageNode:
        $ref: '#/definitions/markdownImageNode'
      linkNode:
        $ref: '#/definitions/markdownLinkNode'
      autoLinkNode:
        $ref: '#/definitions/markdownAutoLinkNode'
      tagNode:
        $ref: '#/definitions/markdownTagNode'
      strikethroughNode:
        $ref: '#/definitions/markdownStrikethroughNode'
      escapingCharacterNode:
        $ref: '#/definitions/markdownEscapingCharacterNode'
      mathNode:
        $ref: '#/definitions/markdownMathNode'
      highlightNode:
        $ref: '#/definitions/markdownHighlightNode'
      subscriptNode:
        $ref: '#/definitions/markdownSubscriptNode'
      superscriptNode:
        $ref: '#/definitions/markdownSuperscriptNode'
      referencedContentNode:
        $ref: '#/definitions/markdownReferencedContentNode'
      spoilerNode:
        $ref: '#/definitions/markdownSpoilerNode'
      htmlElementNode:
        $ref: '#/definitions/markdownHTMLElementNode'
  markdownNodeType:
    type: string
    enum:
      - NODE_UNSPECIFIED
      - LINE_BREAK
      - PARAGRAPH
      - CODE_BLOCK
      - HEADING
      - HORIZONTAL_RULE
      - BLOCKQUOTE
      - LIST
      - ORDERED_LIST_ITEM
      - UNORDERED_LIST_ITEM
      - TASK_LIST_ITEM
      - MATH_BLOCK
      - TABLE
      - EMBEDDED_CONTENT
      - TEXT
      - BOLD
      - ITALIC
      - BOLD_ITALIC
      - CODE
      - IMAGE
      - LINK
      - AUTO_LINK
      - TAG
      - STRIKETHROUGH
      - ESCAPING_CHARACTER
      - MATH
      - HIGHLIGHT
      - SUBSCRIPT
      - SUPERSCRIPT
      - REFERENCED_CONTENT
      - SPOILER
      - HTML_ELEMENT
    default: NODE_UNSPECIFIED
    description: |2-
       - LINE_BREAK: Block nodes.
       - TEXT: Inline nodes.
  markdownOrderedListItemNode:
    type: object
    properties:
      number:
        type: string
      indent:
        type: integer
        format: int32
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/markdownNode'
  markdownParagraphNode:
    type: object
    properties:
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/markdownNode'
  markdownReferencedContentNode:
    type: object
    properties:
      resourceName:
        type: string
      params:
        type: string
  markdownSpoilerNode:
    type: object
    properties:
      content:
        type: string
  markdownStrikethroughNode:
    type: object
    properties:
      content:
        type: string
  markdownSubscriptNode:
    type: object
    properties:
      content:
        type: string
  markdownSuperscriptNode:
    type: object
    properties:
      content:
        type: string
  markdownTableNode:
    type: object
    properties:
      header:
        type: array
        items:
          type: object
          $ref: '#/definitions/markdownNode'
      delimiter:
        type: array
        items:
          type: string
      rows:
        type: array
        items:
          type: object
          $ref: '#/definitions/TableNodeRow'
  markdownTagNode:
    type: object
    properties:
      content:
        type: string
  markdownTaskListItemNode:
    type: object
    properties:
      symbol:
        type: string
      indent:
        type: integer
        format: int32
      complete:
        type: boolean
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/markdownNode'
  markdownTextNode:
    type: object
    properties:
      content:
        type: string
  markdownUnorderedListItemNode:
    type: object
    properties:
      symbol:
        type: string
      indent:
        type: integer
        format: int32
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/markdownNode'
  memoLocation:
    type: object
    properties:
      placeholder:
        type: string
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
  memoMemo:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the memo.
          Format: memos/{memo}, memo is the user defined id or uuid.
        readOnly: true
      state:
        $ref: '#/definitions/commonState'
      creator:
        type: string
        title: |-
          The name of the creator.
          Format: users/{user}
      createTime:
        type: string
        format: date-time
      updateTime:
        type: string
        format: date-time
      displayTime:
        type: string
        format: date-time
      content:
        type: string
      nodes:
        type: array
        items:
          type: object
          $ref: '#/definitions/markdownNode'
        readOnly: true
      visibility:
        $ref: '#/definitions/memoVisibility'
      tags:
        type: array
        items:
          type: string
        readOnly: true
      pinned:
        type: boolean
      resources:
        type: array
        items:
          type: object
          $ref: '#/definitions/memoResource'
      relations:
        type: array
        items:
          type: object
          $ref: '#/definitions/memoMemoRelation'
      reactions:
        type: array
        items:
          type: object
          $ref: '#/definitions/memoReaction'
        readOnly: true
      property:
        $ref: '#/definitions/MemoProperty'
        readOnly: true
      parent:
        type: string
        title: |-
          The name of the parent memo.
          Format: memos/{id}
        readOnly: true
      snippet:
        type: string
        description: The snippet of the memo content. Plain text only.
        readOnly: true
      location:
        $ref: '#/definitions/memoLocation'
        description: The location of the memo.
  memoMemoRelation:
    type: object
    properties:
      memo:
        $ref: '#/definitions/memoMemoRelationMemo'
      relatedMemo:
        $ref: '#/definitions/memoMemoRelationMemo'
      type:
        $ref: '#/definitions/memoMemoRelationType'
  memoMemoRelationMemo:
    type: object
    properties:
      name:
        type: string
        title: |-
          The name of the memo.
          Format: memos/{id}
      uid:
        type: string
      snippet:
        type: string
        description: The snippet of the memo content. Plain text only.
        readOnly: true
  memoMemoRelationType:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - REFERENCE
      - COMMENT
    default: TYPE_UNSPECIFIED
  memoReaction:
    type: object
    properties:
      id:
        type: integer
        format: int32
      creator:
        type: string
        title: |-
          The name of the creator.
          Format: users/{user}
      contentId:
        type: string
        description: |-
          The content identifier.
          For memo, it should be the `Memo.name`.
      reactionType:
        type: string
  memoResource:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the resource.
          Format: resources/{resource}, resource is the user defined if or uuid.
        readOnly: true
      createTime:
        type: string
        format: date-time
        readOnly: true
      filename:
        type: string
      content:
        type: string
        format: byte
      externalLink:
        type: string
      type:
        type: string
      size:
        type: string
        format: int64
      memo:
        type: string
        description: The related memo. Refer to `Memo.name`.
  memoVisibility:
    type: string
    enum:
      - VISIBILITY_UNSPECIFIED
      - PRIVATE
      - PROTECTED
      - PUBLIC
    default: VISIBILITY_UNSPECIFIED
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  userAccessToken:
    type: object
    properties:
      accessToken:
        type: string
      description:
        type: string
      issuedAt:
        type: string
        format: date-time
      expiresAt:
        type: string
        format: date-time
  userSetting:
    type: object
    properties:
      name:
        type: string
        description: The name of the user.
      locale:
        type: string
        description: The preferred locale of the user.
      appearance:
        type: string
        description: The preferred appearance of the user.
      memoVisibility:
        type: string
        description: The default visibility of the memo.
  userState:
    type: string
    enum:
      - STATE_UNSPECIFIED
      - NORMAL
      - ARCHIVED
    default: STATE_UNSPECIFIED
  userStats:
    type: object
    properties:
      name:
        type: string
        description: The name of the user.
      memoDisplayTimestamps:
        type: array
        items:
          type: string
          format: date-time
        description: |-
          The timestamps when the memos were displayed.
          We should return raw data to the client, and let the client format the data with the user's timezone.
      memoTypeStats:
        $ref: '#/definitions/StatsMemoTypeStats'
        description: The stats of memo types.
      tagCount:
        type: object
        additionalProperties:
          type: integer
          format: int32
        title: |-
          The count of tags.
          Format: "tag1": 1, "tag2": 2
      pinnedMemos:
        type: array
        items:
          type: string
        description: The pinned memos of the user.
      totalMemoCount:
        type: integer
        format: int32
  userUser:
    type: object
    properties:
      id:
        type: string
        format: int64
      name:
        type: string
      username:
        type: string
      role:
        $ref: '#/definitions/UserRole'
      nickname:
        type: string
      email:
        type: string
      avatarUrl:
        type: string
      description:
        type: string
      password:
        type: string
      state:
        $ref: '#/definitions/userState'
      createAt:
        type: string
        format: date-time
        readOnly: true
      updateAt:
        type: string
        format: date-time
        readOnly: true
  v1ListAllUserStatsResponse:
    type: object
    properties:
      userStats:
        type: array
        items:
          type: object
          $ref: '#/definitions/userStats'
  v1ListIdentityProvidersResponse:
    type: object
    properties:
      identityProviders:
        type: array
        items:
          type: object
          $ref: '#/definitions/workspaceIdentityProvider'
  v1ListInboxesResponse:
    type: object
    properties:
      inboxes:
        type: array
        items:
          type: object
          $ref: '#/definitions/workspaceInbox'
      nextPageToken:
        type: string
        description: |-
          A token, which can be sent as `page_token` to retrieve the next page.
          If this field is omitted, there are no subsequent pages.
  v1ListMemosResponse:
    type: object
    properties:
      memos:
        type: array
        items:
          type: object
          $ref: '#/definitions/memoMemo'
      nextPageToken:
        type: string
        description: |-
          A token, which can be sent as `page_token` to retrieve the next page.
          If this field is omitted, there are no subsequent pages.
  v1ParseMarkdownRequest:
    type: object
    properties:
      markdown:
        type: string
  v1ParseMarkdownResponse:
    type: object
    properties:
      nodes:
        type: array
        items:
          type: object
          $ref: '#/definitions/markdownNode'
  v1RestoreMarkdownNodesRequest:
    type: object
    properties:
      nodes:
        type: array
        items:
          type: object
          $ref: '#/definitions/markdownNode'
  v1RestoreMarkdownNodesResponse:
    type: object
    properties:
      markdown:
        type: string
  v1StringifyMarkdownNodesRequest:
    type: object
    properties:
      nodes:
        type: array
        items:
          type: object
          $ref: '#/definitions/markdownNode'
  v1StringifyMarkdownNodesResponse:
    type: object
    properties:
      plainText:
        type: string
  workspaceCustomProfile:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      logoUrl:
        type: string
      locale:
        type: string
      appearance:
        type: string
  workspaceFieldMapping:
    type: object
    properties:
      identifier:
        type: string
      displayName:
        type: string
      email:
        type: string
  workspaceGeneralSetting:
    type: object
    properties:
      disallowUserRegistration:
        type: boolean
        description: disallow_user_registration disallows user registration.
      disallowPasswordAuth:
        type: boolean
        description: disallow_password_auth disallows password authentication.
      additionalScript:
        type: string
        description: additional_script is the additional script.
      additionalStyle:
        type: string
        description: additional_style is the additional style.
      customProfile:
        $ref: '#/definitions/workspaceCustomProfile'
        description: custom_profile is the custom profile.
      weekStartDayOffset:
        type: integer
        format: int32
        description: |-
          week_start_day_offset is the week start day offset from Sunday.
          0: Sunday, 1: Monday, 2: Tuesday, 3: Wednesday, 4: Thursday, 5: Friday, 6: Saturday
          Default is Sunday.
      disallowChangeUsername:
        type: boolean
        description: disallow_change_username disallows changing username.
      disallowChangeNickname:
        type: boolean
        description: disallow_change_nickname disallows changing nickname.
  workspaceIdentityProvider:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the identityProvider.
          Format: identityProviders/{id}, id is the system generated auto-incremented id.
      type:
        $ref: '#/definitions/workspaceIdentityProviderType'
      title:
        type: string
      identifierFilter:
        type: string
      config:
        $ref: '#/definitions/workspaceIdentityProviderConfig'
  workspaceIdentityProviderConfig:
    type: object
    properties:
      oauth2Config:
        $ref: '#/definitions/workspaceOAuth2Config'
  workspaceIdentityProviderType:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - OAUTH2
    default: TYPE_UNSPECIFIED
  workspaceInbox:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the inbox.
          Format: inboxes/{id}, id is the system generated auto-incremented id.
      sender:
        type: string
        title: 'Format: users/{user}'
      receiver:
        type: string
        title: 'Format: users/{user}'
      status:
        $ref: '#/definitions/workspaceInboxStatus'
      createTime:
        type: string
        format: date-time
      type:
        $ref: '#/definitions/workspaceInboxType'
      activityId:
        type: integer
        format: int32
  workspaceInboxStatus:
    type: string
    enum:
      - STATUS_UNSPECIFIED
      - UNREAD
      - ARCHIVED
    default: STATUS_UNSPECIFIED
  workspaceInboxType:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - MEMO_COMMENT
      - VERSION_UPDATE
    default: TYPE_UNSPECIFIED
  workspaceMemoRelatedSetting:
    type: object
    properties:
      disallowPublicVisibility:
        type: boolean
        description: disallow_public_visibility disallows set memo as public visibility.
      displayWithUpdateTime:
        type: boolean
        description: display_with_update_time orders and displays memo with update time.
      contentLengthLimit:
        type: integer
        format: int32
        description: content_length_limit is the limit of content length. Unit is byte.
      enableDoubleClickEdit:
        type: boolean
        description: enable_double_click_edit enables editing on double click.
      enableLinkPreview:
        type: boolean
        description: enable_link_preview enables links preview.
      enableComment:
        type: boolean
        description: enable_comment enables comment.
      enableLocation:
        type: boolean
        description: enable_location enables setting location for memo.
      reactions:
        type: array
        items:
          type: string
        description: reactions is the list of reactions.
      disableMarkdownShortcuts:
        type: boolean
        description: disable_markdown_shortcuts disallow the registration of markdown shortcuts.
      enableBlurNsfwContent:
        type: boolean
        description: enable_blur_nsfw_content enables blurring of content marked as not safe for work (NSFW).
      nsfwTags:
        type: array
        items:
          type: string
        description: nsfw_tags is the list of tags that mark content as NSFW for blurring.
  workspaceOAuth2Config:
    type: object
    properties:
      clientId:
        type: string
      clientSecret:
        type: string
      authUrl:
        type: string
      tokenUrl:
        type: string
      userInfoUrl:
        type: string
      scopes:
        type: array
        items:
          type: string
      fieldMapping:
        $ref: '#/definitions/workspaceFieldMapping'
  workspaceProfile:
    type: object
    properties:
      owner:
        type: string
        title: |-
          The name of instance owner.
          Format: users/{user}
      version:
        type: string
        title: version is the current version of instance
      mode:
        type: string
        description: mode is the instance mode (e.g. "prod", "dev" or "demo").
      instanceUrl:
        type: string
        description: instance_url is the URL of the instance.
  workspaceSetting:
    type: object
    properties:
      name:
        type: string
        title: |-
          name is the name of the setting.
          Format: settings/{setting}
      generalSetting:
        $ref: '#/definitions/workspaceGeneralSetting'
      storageSetting:
        $ref: '#/definitions/workspaceStorageSetting'
      memoRelatedSetting:
        $ref: '#/definitions/workspaceMemoRelatedSetting'
  workspaceStorageSetting:
    type: object
    properties:
      storageType:
        $ref: '#/definitions/StorageSettingStorageType'
        description: storage_type is the storage type.
      filepathTemplate:
        type: string
        title: |-
          The template of file path.
          e.g. assets/{timestamp}_{filename}
      uploadSizeLimitMb:
        type: string
        format: int64
        description: The max upload size in megabytes.
      s3Config:
        $ref: '#/definitions/StorageSettingS3Config'
        description: The S3 config.
