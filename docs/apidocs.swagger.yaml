swagger: "2.0"
info:
  title: model/common.proto
  version: version not set
tags:
  - name: AuthService
  - name: InboxService
  - name: MarkdownService
  - name: MemoService
  - name: UserService
  - name: WebhookService
  - name: WorkspaceService
consumes:
  - application/json
produces:
  - application/json
paths: {}
definitions:
  CreateSessionRequestPasswordCredentials:
    type: object
    properties:
      username:
        type: string
        description: |-
          The username to sign in with.
          Required field for password-based authentication.
      password:
        type: string
        description: |-
          The password to sign in with.
          Required field for password-based authentication.
    description: Nested message for password-based authentication credentials.
  CreateSessionRequestSSOCredentials:
    type: object
    properties:
      idpId:
        type: integer
        format: int32
        description: |-
          The ID of the SSO provider.
          Required field to identify the SSO provider.
      code:
        type: string
        description: |-
          The authorization code from the SSO provider.
          Required field for completing the SSO flow.
      redirectUri:
        type: string
        description: |-
          The redirect URI used in the SSO flow.
          Required field for security validation.
    description: Nested message for SSO authentication credentials.
  GeneralSettingCustomProfile:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      logoUrl:
        type: string
      locale:
        type: string
      appearance:
        type: string
    description: Custom profile configuration for workspace branding.
  ListNodeKind:
    type: string
    enum:
      - KIND_UNSPECIFIED
      - ORDERED
      - UNORDERED
      - DESCRIPTION
    default: KIND_UNSPECIFIED
  MemoProperty:
    type: object
    properties:
      hasLink:
        type: boolean
      hasTaskList:
        type: boolean
      hasCode:
        type: boolean
      hasIncompleteTasks:
        type: boolean
    description: Computed properties of a memo.
  StorageSettingS3Config:
    type: object
    properties:
      accessKeyId:
        type: string
      accessKeySecret:
        type: string
      endpoint:
        type: string
      region:
        type: string
      bucket:
        type: string
      usePathStyle:
        type: boolean
    title: |-
      S3 configuration for cloud storage backend.
      Reference: https://developers.cloudflare.com/r2/examples/aws/aws-sdk-go/
  StorageSettingStorageType:
    type: string
    enum:
      - STORAGE_TYPE_UNSPECIFIED
      - DATABASE
      - LOCAL
      - S3
    default: STORAGE_TYPE_UNSPECIFIED
    description: |-
      Storage type enumeration for different storage backends.

       - DATABASE: DATABASE is the database storage type.
       - LOCAL: LOCAL is the local storage type.
       - S3: S3 is the S3 storage type.
  TableNodeRow:
    type: object
    properties:
      cells:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelNode'
  UserRole:
    type: string
    enum:
      - ROLE_UNSPECIFIED
      - HOST
      - ADMIN
      - USER
    default: ROLE_UNSPECIFIED
  UserSessionClientInfo:
    type: object
    properties:
      userAgent:
        type: string
        description: User agent string of the client.
      ipAddress:
        type: string
        description: IP address of the client.
      deviceType:
        type: string
        description: Optional. Device type (e.g., "mobile", "desktop", "tablet").
      os:
        type: string
        description: Optional. Operating system (e.g., "iOS 17.0", "Windows 11").
      browser:
        type: string
        description: Optional. Browser name and version (e.g., "Chrome 119.0").
  UserSettingAccessTokensSetting:
    type: object
    properties:
      accessTokens:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelUserAccessToken'
        description: List of user access tokens.
    description: User access tokens configuration.
  UserSettingSessionsSetting:
    type: object
    properties:
      sessions:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelUserSession'
        description: List of active user sessions.
    description: User authentication sessions configuration.
  UserSettingWebhooksSetting:
    type: object
    properties:
      webhooks:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelUserWebhook'
        description: List of user webhooks.
    description: User webhooks configuration.
  UserStatsMemoTypeStats:
    type: object
    properties:
      linkCount:
        type: integer
        format: int32
      codeCount:
        type: integer
        format: int32
      todoCount:
        type: integer
        format: int32
      undoCount:
        type: integer
        format: int32
    description: Memo type statistics.
  WorkspaceSettingMemoRelatedSetting:
    type: object
    properties:
      disallowPublicVisibility:
        type: boolean
        description: disallow_public_visibility disallows set memo as public visibility.
      displayWithUpdateTime:
        type: boolean
        description: display_with_update_time orders and displays memo with update time.
      contentLengthLimit:
        type: integer
        format: int32
        description: content_length_limit is the limit of content length. Unit is byte.
      enableDoubleClickEdit:
        type: boolean
        description: enable_double_click_edit enables editing on double click.
      enableLinkPreview:
        type: boolean
        description: enable_link_preview enables links preview.
      reactions:
        type: array
        items:
          type: string
        description: reactions is the list of reactions.
      disableMarkdownShortcuts:
        type: boolean
        description: disable_markdown_shortcuts disallow the registration of markdown shortcuts.
      enableBlurNsfwContent:
        type: boolean
        description: enable_blur_nsfw_content enables blurring of content marked as not safe for work (NSFW).
      nsfwTags:
        type: array
        items:
          type: string
        description: nsfw_tags is the list of tags that mark content as NSFW for blurring.
    description: Memo-related workspace settings and policies.
  WorkspaceSettingStorageSetting:
    type: object
    properties:
      storageType:
        $ref: '#/definitions/StorageSettingStorageType'
        description: storage_type is the storage type.
      filepathTemplate:
        type: string
        title: |-
          The template of file path.
          e.g. assets/{timestamp}_{filename}
      uploadSizeLimitMb:
        type: string
        format: int64
        description: The max upload size in megabytes.
      s3Config:
        $ref: '#/definitions/StorageSettingS3Config'
        description: The S3 config.
    description: Storage configuration settings for workspace attachments.
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  modelAttachment:
    type: object
    properties:
      name:
        type: string
        title: |-
          The name of the attachment.
          Format: attachments/{attachment}
      createTime:
        type: string
        format: date-time
        description: Output only. The creation timestamp.
        readOnly: true
      filename:
        type: string
        description: The filename of the attachment.
      content:
        type: string
        format: byte
        description: Input only. The content of the attachment.
      externalLink:
        type: string
        description: Optional. The external link of the attachment.
      type:
        type: string
        description: The MIME type of the attachment.
      size:
        type: string
        format: int64
        description: Output only. The size of the attachment in bytes.
        readOnly: true
      memo:
        type: string
        title: |-
          Optional. The related memo. Refer to `Memo.name`.
          Format: memos/{memo}
  modelAutoLinkNode:
    type: object
    properties:
      url:
        type: string
      isRawText:
        type: boolean
  modelBlockquoteNode:
    type: object
    properties:
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelNode'
  modelBoldItalicNode:
    type: object
    properties:
      symbol:
        type: string
      content:
        type: string
  modelBoldNode:
    type: object
    properties:
      symbol:
        type: string
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelNode'
  modelCodeBlockNode:
    type: object
    properties:
      language:
        type: string
      content:
        type: string
  modelCodeNode:
    type: object
    properties:
      content:
        type: string
  modelEmbeddedContentNode:
    type: object
    properties:
      resourceName:
        type: string
        description: The resource name of the embedded content.
      params:
        type: string
        description: Additional parameters for the embedded content.
  modelEscapingCharacterNode:
    type: object
    properties:
      symbol:
        type: string
  modelHTMLElementNode:
    type: object
    properties:
      tagName:
        type: string
      attributes:
        type: object
        additionalProperties:
          type: string
  modelHeadingNode:
    type: object
    properties:
      level:
        type: integer
        format: int32
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelNode'
  modelHighlightNode:
    type: object
    properties:
      content:
        type: string
  modelHorizontalRuleNode:
    type: object
    properties:
      symbol:
        type: string
  modelImageNode:
    type: object
    properties:
      altText:
        type: string
      url:
        type: string
  modelInbox:
    type: object
    properties:
      name:
        type: string
        title: |-
          The resource name of the inbox.
          Format: inboxes/{inbox}
      sender:
        type: string
        title: |-
          The sender of the inbox notification.
          Format: users/{user}
      receiver:
        type: string
        title: |-
          The receiver of the inbox notification.
          Format: users/{user}
      status:
        $ref: '#/definitions/modelInboxStatus'
        description: The status of the inbox notification.
      createTime:
        type: string
        format: date-time
        description: Output only. The creation timestamp.
        readOnly: true
      type:
        $ref: '#/definitions/modelInboxType'
        description: The type of the inbox notification.
      activityId:
        type: integer
        format: int32
        description: Optional. The activity ID associated with this inbox notification.
  modelInboxStatus:
    type: string
    enum:
      - STATUS_UNSPECIFIED
      - UNREAD
      - ARCHIVED
    default: STATUS_UNSPECIFIED
    description: |-
      Status enumeration for inbox notifications.

       - STATUS_UNSPECIFIED: Unspecified status.
       - UNREAD: The notification is unread.
       - ARCHIVED: The notification is archived.
  modelInboxType:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - MEMO_COMMENT
      - VERSION_UPDATE
    default: TYPE_UNSPECIFIED
    description: |-
      Type enumeration for inbox notifications.

       - TYPE_UNSPECIFIED: Unspecified type.
       - MEMO_COMMENT: Memo comment notification.
       - VERSION_UPDATE: Version update notification.
  modelItalicNode:
    type: object
    properties:
      symbol:
        type: string
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelNode'
  modelLineBreakNode:
    type: object
  modelLinkNode:
    type: object
    properties:
      content:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelNode'
      url:
        type: string
  modelListNode:
    type: object
    properties:
      kind:
        $ref: '#/definitions/ListNodeKind'
      indent:
        type: integer
        format: int32
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelNode'
  modelLocation:
    type: object
    properties:
      placeholder:
        type: string
        description: A placeholder text for the location.
      latitude:
        type: number
        format: double
        description: The latitude of the location.
      longitude:
        type: number
        format: double
        description: The longitude of the location.
  modelMathBlockNode:
    type: object
    properties:
      content:
        type: string
  modelMathNode:
    type: object
    properties:
      content:
        type: string
  modelMemo:
    type: object
    properties:
      name:
        type: string
        description: |-
          The resource name of the memo.
          Format: memos/{memo}, memo is the user defined id or uuid.
      state:
        $ref: '#/definitions/modelState'
        description: The state of the memo.
      creator:
        type: string
        title: |-
          The name of the creator.
          Format: users/{user}
      createTime:
        type: string
        format: date-time
        description: Output only. The creation timestamp.
        readOnly: true
      updateTime:
        type: string
        format: date-time
        description: Output only. The last update timestamp.
        readOnly: true
      displayTime:
        type: string
        format: date-time
        description: The display timestamp of the memo.
      content:
        type: string
        description: Required. The content of the memo in Markdown format.
      nodes:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelNode'
        description: Output only. The parsed nodes from the content.
        readOnly: true
      visibility:
        $ref: '#/definitions/modelVisibility'
        description: The visibility of the memo.
      tags:
        type: array
        items:
          type: string
        description: Output only. The tags extracted from the content.
        readOnly: true
      pinned:
        type: boolean
        description: Whether the memo is pinned.
      attachments:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelAttachment'
        description: Optional. The attachments of the memo.
      relations:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelMemoRelation'
        description: Optional. The relations of the memo.
      reactions:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelReaction'
        description: Output only. The reactions to the memo.
        readOnly: true
      property:
        $ref: '#/definitions/MemoProperty'
        description: Output only. The computed properties of the memo.
        readOnly: true
      parent:
        type: string
        title: |-
          Output only. The name of the parent memo.
          Format: memos/{memo}
        readOnly: true
      snippet:
        type: string
        description: Output only. The snippet of the memo content. Plain text only.
        readOnly: true
      location:
        $ref: '#/definitions/modelLocation'
        description: Optional. The location of the memo.
  modelMemoRelation:
    type: object
    properties:
      memo:
        $ref: '#/definitions/modelMemoRelationMemo'
        description: The memo in the relation.
      relatedMemo:
        $ref: '#/definitions/modelMemoRelationMemo'
        description: The related memo.
      type:
        $ref: '#/definitions/modelMemoRelationType'
  modelMemoRelationMemo:
    type: object
    properties:
      name:
        type: string
        title: |-
          The resource name of the memo.
          Format: memos/{memo}
      snippet:
        type: string
        description: Output only. The snippet of the memo content. Plain text only.
        readOnly: true
    description: Memo reference in relations.
  modelMemoRelationType:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - REFERENCE
      - COMMENT
    default: TYPE_UNSPECIFIED
    description: The type of the relation.
  modelNode:
    type: object
    properties:
      type:
        $ref: '#/definitions/modelNodeType'
      lineBreakNode:
        $ref: '#/definitions/modelLineBreakNode'
        description: Block nodes.
      paragraphNode:
        $ref: '#/definitions/modelParagraphNode'
      codeBlockNode:
        $ref: '#/definitions/modelCodeBlockNode'
      headingNode:
        $ref: '#/definitions/modelHeadingNode'
      horizontalRuleNode:
        $ref: '#/definitions/modelHorizontalRuleNode'
      blockquoteNode:
        $ref: '#/definitions/modelBlockquoteNode'
      listNode:
        $ref: '#/definitions/modelListNode'
      orderedListItemNode:
        $ref: '#/definitions/modelOrderedListItemNode'
      unorderedListItemNode:
        $ref: '#/definitions/modelUnorderedListItemNode'
      taskListItemNode:
        $ref: '#/definitions/modelTaskListItemNode'
      mathBlockNode:
        $ref: '#/definitions/modelMathBlockNode'
      tableNode:
        $ref: '#/definitions/modelTableNode'
      embeddedContentNode:
        $ref: '#/definitions/modelEmbeddedContentNode'
      textNode:
        $ref: '#/definitions/modelTextNode'
        description: Inline nodes.
      boldNode:
        $ref: '#/definitions/modelBoldNode'
      italicNode:
        $ref: '#/definitions/modelItalicNode'
      boldItalicNode:
        $ref: '#/definitions/modelBoldItalicNode'
      codeNode:
        $ref: '#/definitions/modelCodeNode'
      imageNode:
        $ref: '#/definitions/modelImageNode'
      linkNode:
        $ref: '#/definitions/modelLinkNode'
      autoLinkNode:
        $ref: '#/definitions/modelAutoLinkNode'
      tagNode:
        $ref: '#/definitions/modelTagNode'
      strikethroughNode:
        $ref: '#/definitions/modelStrikethroughNode'
      escapingCharacterNode:
        $ref: '#/definitions/modelEscapingCharacterNode'
      mathNode:
        $ref: '#/definitions/modelMathNode'
      highlightNode:
        $ref: '#/definitions/modelHighlightNode'
      subscriptNode:
        $ref: '#/definitions/modelSubscriptNode'
      superscriptNode:
        $ref: '#/definitions/modelSuperscriptNode'
      referencedContentNode:
        $ref: '#/definitions/modelReferencedContentNode'
      spoilerNode:
        $ref: '#/definitions/modelSpoilerNode'
      htmlElementNode:
        $ref: '#/definitions/modelHTMLElementNode'
  modelNodeType:
    type: string
    enum:
      - NODE_UNSPECIFIED
      - LINE_BREAK
      - PARAGRAPH
      - CODE_BLOCK
      - HEADING
      - HORIZONTAL_RULE
      - BLOCKQUOTE
      - LIST
      - ORDERED_LIST_ITEM
      - UNORDERED_LIST_ITEM
      - TASK_LIST_ITEM
      - MATH_BLOCK
      - TABLE
      - EMBEDDED_CONTENT
      - TEXT
      - BOLD
      - ITALIC
      - BOLD_ITALIC
      - CODE
      - IMAGE
      - LINK
      - AUTO_LINK
      - TAG
      - STRIKETHROUGH
      - ESCAPING_CHARACTER
      - MATH
      - HIGHLIGHT
      - SUBSCRIPT
      - SUPERSCRIPT
      - REFERENCED_CONTENT
      - SPOILER
      - HTML_ELEMENT
    default: NODE_UNSPECIFIED
    description: |2-
       - LINE_BREAK: Block nodes.
       - TEXT: Inline nodes.
  modelOrderedListItemNode:
    type: object
    properties:
      number:
        type: string
      indent:
        type: integer
        format: int32
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelNode'
  modelParagraphNode:
    type: object
    properties:
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelNode'
  modelReaction:
    type: object
    properties:
      name:
        type: string
        title: |-
          The resource name of the reaction.
          Format: reactions/{reaction}
      creator:
        type: string
        title: |-
          The resource name of the creator.
          Format: users/{user}
      contentId:
        type: string
        title: |-
          The resource name of the content.
          For memo reactions, this should be the memo's resource name.
          Format: memos/{memo}
      reactionType:
        type: string
        description: "Required. The type of reaction (e.g., \"\U0001F44D\", \"❤️\", \"\U0001F604\")."
      createTime:
        type: string
        format: date-time
        description: Output only. The creation timestamp.
        readOnly: true
  modelReferencedContentNode:
    type: object
    properties:
      resourceName:
        type: string
        description: The resource name of the referenced content.
      params:
        type: string
        description: Additional parameters for the referenced content.
  modelSpoilerNode:
    type: object
    properties:
      content:
        type: string
  modelState:
    type: string
    enum:
      - STATE_UNSPECIFIED
      - NORMAL
      - ARCHIVED
    default: STATE_UNSPECIFIED
  modelStrikethroughNode:
    type: object
    properties:
      content:
        type: string
  modelSubscriptNode:
    type: object
    properties:
      content:
        type: string
  modelSuperscriptNode:
    type: object
    properties:
      content:
        type: string
  modelTableNode:
    type: object
    properties:
      header:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelNode'
      delimiter:
        type: array
        items:
          type: string
      rows:
        type: array
        items:
          type: object
          $ref: '#/definitions/TableNodeRow'
  modelTagNode:
    type: object
    properties:
      content:
        type: string
  modelTaskListItemNode:
    type: object
    properties:
      symbol:
        type: string
      indent:
        type: integer
        format: int32
      complete:
        type: boolean
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelNode'
  modelTextNode:
    type: object
    properties:
      content:
        type: string
  modelUnorderedListItemNode:
    type: object
    properties:
      symbol:
        type: string
      indent:
        type: integer
        format: int32
      children:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelNode'
  modelUser:
    type: object
    properties:
      id:
        type: string
        format: int64
      name:
        type: string
      username:
        type: string
      role:
        $ref: '#/definitions/UserRole'
      nickname:
        type: string
      email:
        type: string
      avatarUrl:
        type: string
      description:
        type: string
      password:
        type: string
      state:
        $ref: '#/definitions/modelState'
      createAt:
        type: string
        format: date-time
      updateAt:
        type: string
        format: date-time
  modelUserAccessToken:
    type: object
    properties:
      name:
        type: string
        title: |-
          The resource name of the access token.
          Format: users/{user}/accessTokens/{access_token}
      accessToken:
        type: string
        description: Output only. The access token value.
        readOnly: true
      description:
        type: string
        description: The description of the access token.
      issuedAt:
        type: string
        format: date-time
        description: Output only. The issued timestamp.
        readOnly: true
      expiresAt:
        type: string
        format: date-time
        description: Optional. The expiration timestamp.
    title: User access token message
  modelUserSession:
    type: object
    properties:
      name:
        type: string
        title: |-
          The resource name of the session.
          Format: users/{user}/sessions/{session}
      sessionId:
        type: string
        description: The session ID.
      createTime:
        type: string
        format: date-time
        description: The timestamp when the session was created.
      lastAccessedTime:
        type: string
        format: date-time
        description: |-
          The timestamp when the session was last accessed.
          Used for sliding expiration calculation (last_accessed_time + 2 weeks).
      clientInfo:
        $ref: '#/definitions/UserSessionClientInfo'
        description: Client information associated with this session.
  modelUserSetting:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the user setting.
          Format: users/{user}/settings/{setting}, {setting} is the key for the setting.
          For example, "users/123/settings/GENERAL" for general settings.
      generalSetting:
        $ref: '#/definitions/modelUserSettingGeneralSetting'
      sessionsSetting:
        $ref: '#/definitions/UserSettingSessionsSetting'
      accessTokensSetting:
        $ref: '#/definitions/UserSettingAccessTokensSetting'
      webhooksSetting:
        $ref: '#/definitions/UserSettingWebhooksSetting'
    title: User settings message
  modelUserSettingGeneralSetting:
    type: object
    properties:
      locale:
        type: string
        description: The preferred locale of the user.
      appearance:
        type: string
        description: The preferred appearance of the user.
      memoVisibility:
        type: string
        description: The default visibility of the memo.
      theme:
        type: string
        description: |-
          The preferred theme of the user.
          This references a CSS file in the web/public/themes/ directory.
          If not set, the default theme will be used.
    description: General user settings configuration.
  modelUserWebhook:
    type: object
    properties:
      name:
        type: string
        title: |-
          The name of the webhook.
          Format: users/{user}/webhooks/{webhook}
      url:
        type: string
        description: The URL to send the webhook to.
      displayName:
        type: string
        description: Optional. Human-readable name for the webhook.
      createTime:
        type: string
        format: date-time
        description: The creation time of the webhook.
      updateTime:
        type: string
        format: date-time
        description: The last update time of the webhook.
    description: UserWebhook represents a webhook owned by a user.
  modelVisibility:
    type: string
    enum:
      - VISIBILITY_UNSPECIFIED
      - PRIVATE
      - PROTECTED
      - PUBLIC
    default: VISIBILITY_UNSPECIFIED
  modelWebhook:
    type: object
    properties:
      name:
        type: string
        title: |-
          The resource name of the webhook.
          Format: users/{user}/webhooks/{webhook}
      displayName:
        type: string
        description: The display name of the webhook.
      url:
        type: string
        description: The target URL for the webhook.
  modelWorkspaceProfile:
    type: object
    properties:
      owner:
        type: string
        title: |-
          The name of instance owner.
          Format: users/{user}
      version:
        type: string
        description: Version is the current version of instance.
      mode:
        type: string
        description: Mode is the instance mode (e.g. "prod", "dev" or "demo").
      instanceUrl:
        type: string
        description: Instance URL is the URL of the instance.
    description: Workspace profile message containing basic workspace information.
  modelWorkspaceSetting:
    type: object
    properties:
      name:
        type: string
        title: |-
          The name of the workspace setting.
          Format: workspace/settings/{setting}
      generalSetting:
        $ref: '#/definitions/modelWorkspaceSettingGeneralSetting'
      storageSetting:
        $ref: '#/definitions/WorkspaceSettingStorageSetting'
      memoRelatedSetting:
        $ref: '#/definitions/WorkspaceSettingMemoRelatedSetting'
    description: A workspace setting resource.
  modelWorkspaceSettingGeneralSetting:
    type: object
    properties:
      theme:
        type: string
        description: |-
          theme is the name of the selected theme.
          This references a CSS file in the web/public/themes/ directory.
      disallowUserRegistration:
        type: boolean
        description: disallow_user_registration disallows user registration.
      disallowPasswordAuth:
        type: boolean
        description: disallow_password_auth disallows password authentication.
      additionalScript:
        type: string
        description: additional_script is the additional script.
      additionalStyle:
        type: string
        description: additional_style is the additional style.
      customProfile:
        $ref: '#/definitions/GeneralSettingCustomProfile'
        description: custom_profile is the custom profile.
      weekStartDayOffset:
        type: integer
        format: int32
        description: |-
          week_start_day_offset is the week start day offset from Sunday.
          0: Sunday, 1: Monday, 2: Tuesday, 3: Wednesday, 4: Thursday, 5: Friday, 6: Saturday
          Default is Sunday.
      disallowChangeUsername:
        type: boolean
        description: disallow_change_username disallows changing username.
      disallowChangeNickname:
        type: boolean
        description: disallow_change_nickname disallows changing nickname.
    description: General workspace settings configuration.
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  v2CreateSessionResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/modelUser'
        description: The authenticated user information.
      lastAccessedAt:
        type: string
        format: date-time
        description: |-
          Last time the session was accessed.
          Used for sliding expiration calculation (last_accessed_time + 2 weeks).
  v2GetCurrentSessionResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/modelUser'
      lastAccessedAt:
        type: string
        format: date-time
        description: |-
          Last time the session was accessed.
          Used for sliding expiration calculation (last_accessed_time + 2 weeks).
  v2ListInboxesResponse:
    type: object
    properties:
      inboxes:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelInbox'
        description: The list of inboxes.
      nextPageToken:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page.
          If this field is omitted, there are no subsequent pages.
      totalSize:
        type: integer
        format: int32
        description: The total count of inboxes (may be approximate).
  v2ListMemoCommentsResponse:
    type: object
    properties:
      memos:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelMemo'
        description: The list of comment memos.
      nextPageToken:
        type: string
        description: A token for the next page of results.
      totalSize:
        type: integer
        format: int32
        description: The total count of comments.
  v2ListMemosResponse:
    type: object
    properties:
      memos:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelMemo'
        description: The list of memos.
      nextPageToken:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page.
          If this field is omitted, there are no subsequent pages.
      totalSize:
        type: integer
        format: int32
        description: The total count of memos (may be approximate).
  v2ListUserAccessTokensResponse:
    type: object
    properties:
      accessTokens:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelUserAccessToken'
        description: The list of access tokens.
      nextPageToken:
        type: string
        description: A token for the next page of results.
      totalSize:
        type: integer
        format: int32
        description: The total count of access tokens.
  v2ListUserSessionsResponse:
    type: object
    properties:
      sessions:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelUserSession'
        description: The list of user sessions.
  v2ListUserSettingsResponse:
    type: object
    properties:
      settings:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelUserSetting'
        description: The list of user settings.
      nextPageToken:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page.
          If this field is omitted, there are no subsequent pages.
      totalSize:
        type: integer
        format: int32
        description: The total count of settings (may be approximate).
    description: Response message for ListUserSettings method.
  v2ListUsersResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelUser'
        description: The list of users.
      nextPageToken:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page.
          If this field is omitted, there are no subsequent pages.
      totalSize:
        type: integer
        format: int32
        description: The total count of users (may be approximate).
  v2ListWebhooksResponse:
    type: object
    properties:
      webhooks:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelWebhook'
        description: The list of webhooks.
  v2ParseMarkdownResponse:
    type: object
    properties:
      nodes:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelNode'
        description: The parsed markdown nodes.
  v2SearchUsersResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelUser'
        description: The list of users matching the search query.
      nextPageToken:
        type: string
        description: A token for the next page of results.
      totalSize:
        type: integer
        format: int32
        description: The total count of matching users.
  v2UserStats:
    type: object
    properties:
      name:
        type: string
        title: |-
          The resource name of the user whose stats these are.
          Format: users/{user}
      memoDisplayTimestamps:
        type: array
        items:
          type: string
          format: date-time
        description: The timestamps when the memos were displayed.
      memoTypeStats:
        $ref: '#/definitions/UserStatsMemoTypeStats'
        description: The stats of memo types.
      tagCount:
        type: object
        additionalProperties:
          type: integer
          format: int32
        description: The count of tags.
      pinnedMemos:
        type: array
        items:
          type: string
        description: The pinned memos of the user.
      totalMemoCount:
        type: integer
        format: int32
        description: Total memo count.
    title: User statistics messages
