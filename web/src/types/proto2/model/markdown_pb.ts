// @generated by protoc-gen-es v2.6.2 with parameter "target=ts"
// @generated from file model/markdown.proto (package model, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_api_field_behavior } from "../google/api/field_behavior_pb";
import { file_model_common } from "./common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file model/markdown.proto.
 */
export const file_model_markdown: GenFile = /*@__PURE__*/
  fileDesc("ChRtb2RlbC9tYXJrZG93bi5wcm90bxIFbW9kZWwiQQoMTGlua01ldGFkYXRhEg0KBXRpdGxlGAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIgASgJEg0KBWltYWdlGAMgASgJIpEMCgROb2RlEh0KBHR5cGUYASABKA4yDy5tb2RlbC5Ob2RlVHlwZRIvCg9saW5lX2JyZWFrX25vZGUYCyABKAsyFC5tb2RlbC5MaW5lQnJlYWtOb2RlSAASLgoOcGFyYWdyYXBoX25vZGUYDCABKAsyFC5tb2RlbC5QYXJhZ3JhcGhOb2RlSAASLwoPY29kZV9ibG9ja19ub2RlGA0gASgLMhQubW9kZWwuQ29kZUJsb2NrTm9kZUgAEioKDGhlYWRpbmdfbm9kZRgOIAEoCzISLm1vZGVsLkhlYWRpbmdOb2RlSAASOQoUaG9yaXpvbnRhbF9ydWxlX25vZGUYDyABKAsyGS5tb2RlbC5Ib3Jpem9udGFsUnVsZU5vZGVIABIwCg9ibG9ja3F1b3RlX25vZGUYECABKAsyFS5tb2RlbC5CbG9ja3F1b3RlTm9kZUgAEiQKCWxpc3Rfbm9kZRgRIAEoCzIPLm1vZGVsLkxpc3ROb2RlSAASPAoWb3JkZXJlZF9saXN0X2l0ZW1fbm9kZRgSIAEoCzIaLm1vZGVsLk9yZGVyZWRMaXN0SXRlbU5vZGVIABJAChh1bm9yZGVyZWRfbGlzdF9pdGVtX25vZGUYEyABKAsyHC5tb2RlbC5Vbm9yZGVyZWRMaXN0SXRlbU5vZGVIABI2ChN0YXNrX2xpc3RfaXRlbV9ub2RlGBQgASgLMhcubW9kZWwuVGFza0xpc3RJdGVtTm9kZUgAEi8KD21hdGhfYmxvY2tfbm9kZRgVIAEoCzIULm1vZGVsLk1hdGhCbG9ja05vZGVIABImCgp0YWJsZV9ub2RlGBYgASgLMhAubW9kZWwuVGFibGVOb2RlSAASOwoVZW1iZWRkZWRfY29udGVudF9ub2RlGBcgASgLMhoubW9kZWwuRW1iZWRkZWRDb250ZW50Tm9kZUgAEiQKCXRleHRfbm9kZRgzIAEoCzIPLm1vZGVsLlRleHROb2RlSAASJAoJYm9sZF9ub2RlGDQgASgLMg8ubW9kZWwuQm9sZE5vZGVIABIoCgtpdGFsaWNfbm9kZRg1IAEoCzIRLm1vZGVsLkl0YWxpY05vZGVIABIxChBib2xkX2l0YWxpY19ub2RlGDYgASgLMhUubW9kZWwuQm9sZEl0YWxpY05vZGVIABIkCgljb2RlX25vZGUYNyABKAsyDy5tb2RlbC5Db2RlTm9kZUgAEiYKCmltYWdlX25vZGUYOCABKAsyEC5tb2RlbC5JbWFnZU5vZGVIABIkCglsaW5rX25vZGUYOSABKAsyDy5tb2RlbC5MaW5rTm9kZUgAEi0KDmF1dG9fbGlua19ub2RlGDogASgLMhMubW9kZWwuQXV0b0xpbmtOb2RlSAASIgoIdGFnX25vZGUYOyABKAsyDi5tb2RlbC5UYWdOb2RlSAASNgoSc3RyaWtldGhyb3VnaF9ub2RlGDwgASgLMhgubW9kZWwuU3RyaWtldGhyb3VnaE5vZGVIABI/Chdlc2NhcGluZ19jaGFyYWN0ZXJfbm9kZRg9IAEoCzIcLm1vZGVsLkVzY2FwaW5nQ2hhcmFjdGVyTm9kZUgAEiQKCW1hdGhfbm9kZRg+IAEoCzIPLm1vZGVsLk1hdGhOb2RlSAASLgoOaGlnaGxpZ2h0X25vZGUYPyABKAsyFC5tb2RlbC5IaWdobGlnaHROb2RlSAASLgoOc3Vic2NyaXB0X25vZGUYQCABKAsyFC5tb2RlbC5TdWJzY3JpcHROb2RlSAASMgoQc3VwZXJzY3JpcHRfbm9kZRhBIAEoCzIWLm1vZGVsLlN1cGVyc2NyaXB0Tm9kZUgAEj8KF3JlZmVyZW5jZWRfY29udGVudF9ub2RlGEIgASgLMhwubW9kZWwuUmVmZXJlbmNlZENvbnRlbnROb2RlSAASKgoMc3BvaWxlcl9ub2RlGEMgASgLMhIubW9kZWwuU3BvaWxlck5vZGVIABIzChFodG1sX2VsZW1lbnRfbm9kZRhEIAEoCzIWLm1vZGVsLkhUTUxFbGVtZW50Tm9kZUgAQgYKBG5vZGUiDwoNTGluZUJyZWFrTm9kZSIuCg1QYXJhZ3JhcGhOb2RlEh0KCGNoaWxkcmVuGAEgAygLMgsubW9kZWwuTm9kZSIyCg1Db2RlQmxvY2tOb2RlEhAKCGxhbmd1YWdlGAEgASgJEg8KB2NvbnRlbnQYAiABKAkiOwoLSGVhZGluZ05vZGUSDQoFbGV2ZWwYASABKAUSHQoIY2hpbGRyZW4YAiADKAsyCy5tb2RlbC5Ob2RlIiQKEkhvcml6b250YWxSdWxlTm9kZRIOCgZzeW1ib2wYASABKAkiLwoOQmxvY2txdW90ZU5vZGUSHQoIY2hpbGRyZW4YASADKAsyCy5tb2RlbC5Ob2RlIqgBCghMaXN0Tm9kZRIiCgRraW5kGAEgASgOMhQubW9kZWwuTGlzdE5vZGUuS2luZBIOCgZpbmRlbnQYAiABKAUSHQoIY2hpbGRyZW4YAyADKAsyCy5tb2RlbC5Ob2RlIkkKBEtpbmQSFAoQS0lORF9VTlNQRUNJRklFRBAAEgsKB09SREVSRUQQARINCglVTk9SREVSRUQQAhIPCgtERVNDUklQVElPThADIlQKE09yZGVyZWRMaXN0SXRlbU5vZGUSDgoGbnVtYmVyGAEgASgJEg4KBmluZGVudBgCIAEoBRIdCghjaGlsZHJlbhgDIAMoCzILLm1vZGVsLk5vZGUiVgoVVW5vcmRlcmVkTGlzdEl0ZW1Ob2RlEg4KBnN5bWJvbBgBIAEoCRIOCgZpbmRlbnQYAiABKAUSHQoIY2hpbGRyZW4YAyADKAsyCy5tb2RlbC5Ob2RlImMKEFRhc2tMaXN0SXRlbU5vZGUSDgoGc3ltYm9sGAEgASgJEg4KBmluZGVudBgCIAEoBRIQCghjb21wbGV0ZRgDIAEoCBIdCghjaGlsZHJlbhgEIAMoCzILLm1vZGVsLk5vZGUiIAoNTWF0aEJsb2NrTm9kZRIPCgdjb250ZW50GAEgASgJIoIBCglUYWJsZU5vZGUSGwoGaGVhZGVyGAEgAygLMgsubW9kZWwuTm9kZRIRCglkZWxpbWl0ZXIYAiADKAkSIgoEcm93cxgDIAMoCzIULm1vZGVsLlRhYmxlTm9kZS5Sb3caIQoDUm93EhoKBWNlbGxzGAEgAygLMgsubW9kZWwuTm9kZSI8ChNFbWJlZGRlZENvbnRlbnROb2RlEhUKDXJlc291cmNlX25hbWUYASABKAkSDgoGcGFyYW1zGAIgASgJIhsKCFRleHROb2RlEg8KB2NvbnRlbnQYASABKAkiOQoIQm9sZE5vZGUSDgoGc3ltYm9sGAEgASgJEh0KCGNoaWxkcmVuGAIgAygLMgsubW9kZWwuTm9kZSI7CgpJdGFsaWNOb2RlEg4KBnN5bWJvbBgBIAEoCRIdCghjaGlsZHJlbhgCIAMoCzILLm1vZGVsLk5vZGUiMQoOQm9sZEl0YWxpY05vZGUSDgoGc3ltYm9sGAEgASgJEg8KB2NvbnRlbnQYAiABKAkiGwoIQ29kZU5vZGUSDwoHY29udGVudBgBIAEoCSIqCglJbWFnZU5vZGUSEAoIYWx0X3RleHQYASABKAkSCwoDdXJsGAIgASgJIjUKCExpbmtOb2RlEhwKB2NvbnRlbnQYASADKAsyCy5tb2RlbC5Ob2RlEgsKA3VybBgCIAEoCSIwCgxBdXRvTGlua05vZGUSCwoDdXJsGAEgASgJEhMKC2lzX3Jhd190ZXh0GAIgASgIIhoKB1RhZ05vZGUSDwoHY29udGVudBgBIAEoCSIkChFTdHJpa2V0aHJvdWdoTm9kZRIPCgdjb250ZW50GAEgASgJIicKFUVzY2FwaW5nQ2hhcmFjdGVyTm9kZRIOCgZzeW1ib2wYASABKAkiGwoITWF0aE5vZGUSDwoHY29udGVudBgBIAEoCSIgCg1IaWdobGlnaHROb2RlEg8KB2NvbnRlbnQYASABKAkiIAoNU3Vic2NyaXB0Tm9kZRIPCgdjb250ZW50GAEgASgJIiIKD1N1cGVyc2NyaXB0Tm9kZRIPCgdjb250ZW50GAEgASgJIj4KFVJlZmVyZW5jZWRDb250ZW50Tm9kZRIVCg1yZXNvdXJjZV9uYW1lGAEgASgJEg4KBnBhcmFtcxgCIAEoCSIeCgtTcG9pbGVyTm9kZRIPCgdjb250ZW50GAEgASgJIpIBCg9IVE1MRWxlbWVudE5vZGUSEAoIdGFnX25hbWUYASABKAkSOgoKYXR0cmlidXRlcxgCIAMoCzImLm1vZGVsLkhUTUxFbGVtZW50Tm9kZS5BdHRyaWJ1dGVzRW50cnkaMQoPQXR0cmlidXRlc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEqgwQKCE5vZGVUeXBlEhQKEE5PREVfVU5TUEVDSUZJRUQQABIOCgpMSU5FX0JSRUFLEAESDQoJUEFSQUdSQVBIEAISDgoKQ09ERV9CTE9DSxADEgsKB0hFQURJTkcQBBITCg9IT1JJWk9OVEFMX1JVTEUQBRIOCgpCTE9DS1FVT1RFEAYSCAoETElTVBAHEhUKEU9SREVSRURfTElTVF9JVEVNEAgSFwoTVU5PUkRFUkVEX0xJU1RfSVRFTRAJEhIKDlRBU0tfTElTVF9JVEVNEAoSDgoKTUFUSF9CTE9DSxALEgkKBVRBQkxFEAwSFAoQRU1CRURERURfQ09OVEVOVBANEggKBFRFWFQQMxIICgRCT0xEEDQSCgoGSVRBTElDEDUSDwoLQk9MRF9JVEFMSUMQNhIICgRDT0RFEDcSCQoFSU1BR0UQOBIICgRMSU5LEDkSDQoJQVVUT19MSU5LEDoSBwoDVEFHEDsSEQoNU1RSSUtFVEhST1VHSBA8EhYKEkVTQ0FQSU5HX0NIQVJBQ1RFUhA9EggKBE1BVEgQPhINCglISUdITElHSFQQPxINCglTVUJTQ1JJUFQQQBIPCgtTVVBFUlNDUklQVBBBEhYKElJFRkVSRU5DRURfQ09OVEVOVBBCEgsKB1NQT0lMRVIQQxIQCgxIVE1MX0VMRU1FTlQQREIyWjBnaXRodWIuY29tL3NtYXJ0bWVtb3MvbWVtb3MvaW50ZXJuYWwvcHJvdG8vbW9kZWxiBnByb3RvMw", [file_google_protobuf_timestamp, file_google_api_field_behavior, file_model_common]);

/**
 * @generated from message model.LinkMetadata
 */
export type LinkMetadata = Message<"model.LinkMetadata"> & {
  /**
   * The title of the linked page.
   *
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * The description of the linked page.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * The URL of the preview image for the linked page.
   *
   * @generated from field: string image = 3;
   */
  image: string;
};

/**
 * Describes the message model.LinkMetadata.
 * Use `create(LinkMetadataSchema)` to create a new message.
 */
export const LinkMetadataSchema: GenMessage<LinkMetadata> = /*@__PURE__*/
  messageDesc(file_model_markdown, 0);

/**
 * @generated from message model.Node
 */
export type Node = Message<"model.Node"> & {
  /**
   * @generated from field: model.NodeType type = 1;
   */
  type: NodeType;

  /**
   * @generated from oneof model.Node.node
   */
  node: {
    /**
     * Block nodes.
     *
     * @generated from field: model.LineBreakNode line_break_node = 11;
     */
    value: LineBreakNode;
    case: "lineBreakNode";
  } | {
    /**
     * @generated from field: model.ParagraphNode paragraph_node = 12;
     */
    value: ParagraphNode;
    case: "paragraphNode";
  } | {
    /**
     * @generated from field: model.CodeBlockNode code_block_node = 13;
     */
    value: CodeBlockNode;
    case: "codeBlockNode";
  } | {
    /**
     * @generated from field: model.HeadingNode heading_node = 14;
     */
    value: HeadingNode;
    case: "headingNode";
  } | {
    /**
     * @generated from field: model.HorizontalRuleNode horizontal_rule_node = 15;
     */
    value: HorizontalRuleNode;
    case: "horizontalRuleNode";
  } | {
    /**
     * @generated from field: model.BlockquoteNode blockquote_node = 16;
     */
    value: BlockquoteNode;
    case: "blockquoteNode";
  } | {
    /**
     * @generated from field: model.ListNode list_node = 17;
     */
    value: ListNode;
    case: "listNode";
  } | {
    /**
     * @generated from field: model.OrderedListItemNode ordered_list_item_node = 18;
     */
    value: OrderedListItemNode;
    case: "orderedListItemNode";
  } | {
    /**
     * @generated from field: model.UnorderedListItemNode unordered_list_item_node = 19;
     */
    value: UnorderedListItemNode;
    case: "unorderedListItemNode";
  } | {
    /**
     * @generated from field: model.TaskListItemNode task_list_item_node = 20;
     */
    value: TaskListItemNode;
    case: "taskListItemNode";
  } | {
    /**
     * @generated from field: model.MathBlockNode math_block_node = 21;
     */
    value: MathBlockNode;
    case: "mathBlockNode";
  } | {
    /**
     * @generated from field: model.TableNode table_node = 22;
     */
    value: TableNode;
    case: "tableNode";
  } | {
    /**
     * @generated from field: model.EmbeddedContentNode embedded_content_node = 23;
     */
    value: EmbeddedContentNode;
    case: "embeddedContentNode";
  } | {
    /**
     * Inline nodes.
     *
     * @generated from field: model.TextNode text_node = 51;
     */
    value: TextNode;
    case: "textNode";
  } | {
    /**
     * @generated from field: model.BoldNode bold_node = 52;
     */
    value: BoldNode;
    case: "boldNode";
  } | {
    /**
     * @generated from field: model.ItalicNode italic_node = 53;
     */
    value: ItalicNode;
    case: "italicNode";
  } | {
    /**
     * @generated from field: model.BoldItalicNode bold_italic_node = 54;
     */
    value: BoldItalicNode;
    case: "boldItalicNode";
  } | {
    /**
     * @generated from field: model.CodeNode code_node = 55;
     */
    value: CodeNode;
    case: "codeNode";
  } | {
    /**
     * @generated from field: model.ImageNode image_node = 56;
     */
    value: ImageNode;
    case: "imageNode";
  } | {
    /**
     * @generated from field: model.LinkNode link_node = 57;
     */
    value: LinkNode;
    case: "linkNode";
  } | {
    /**
     * @generated from field: model.AutoLinkNode auto_link_node = 58;
     */
    value: AutoLinkNode;
    case: "autoLinkNode";
  } | {
    /**
     * @generated from field: model.TagNode tag_node = 59;
     */
    value: TagNode;
    case: "tagNode";
  } | {
    /**
     * @generated from field: model.StrikethroughNode strikethrough_node = 60;
     */
    value: StrikethroughNode;
    case: "strikethroughNode";
  } | {
    /**
     * @generated from field: model.EscapingCharacterNode escaping_character_node = 61;
     */
    value: EscapingCharacterNode;
    case: "escapingCharacterNode";
  } | {
    /**
     * @generated from field: model.MathNode math_node = 62;
     */
    value: MathNode;
    case: "mathNode";
  } | {
    /**
     * @generated from field: model.HighlightNode highlight_node = 63;
     */
    value: HighlightNode;
    case: "highlightNode";
  } | {
    /**
     * @generated from field: model.SubscriptNode subscript_node = 64;
     */
    value: SubscriptNode;
    case: "subscriptNode";
  } | {
    /**
     * @generated from field: model.SuperscriptNode superscript_node = 65;
     */
    value: SuperscriptNode;
    case: "superscriptNode";
  } | {
    /**
     * @generated from field: model.ReferencedContentNode referenced_content_node = 66;
     */
    value: ReferencedContentNode;
    case: "referencedContentNode";
  } | {
    /**
     * @generated from field: model.SpoilerNode spoiler_node = 67;
     */
    value: SpoilerNode;
    case: "spoilerNode";
  } | {
    /**
     * @generated from field: model.HTMLElementNode html_element_node = 68;
     */
    value: HTMLElementNode;
    case: "htmlElementNode";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message model.Node.
 * Use `create(NodeSchema)` to create a new message.
 */
export const NodeSchema: GenMessage<Node> = /*@__PURE__*/
  messageDesc(file_model_markdown, 1);

/**
 * @generated from message model.LineBreakNode
 */
export type LineBreakNode = Message<"model.LineBreakNode"> & {
};

/**
 * Describes the message model.LineBreakNode.
 * Use `create(LineBreakNodeSchema)` to create a new message.
 */
export const LineBreakNodeSchema: GenMessage<LineBreakNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 2);

/**
 * @generated from message model.ParagraphNode
 */
export type ParagraphNode = Message<"model.ParagraphNode"> & {
  /**
   * @generated from field: repeated model.Node children = 1;
   */
  children: Node[];
};

/**
 * Describes the message model.ParagraphNode.
 * Use `create(ParagraphNodeSchema)` to create a new message.
 */
export const ParagraphNodeSchema: GenMessage<ParagraphNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 3);

/**
 * @generated from message model.CodeBlockNode
 */
export type CodeBlockNode = Message<"model.CodeBlockNode"> & {
  /**
   * @generated from field: string language = 1;
   */
  language: string;

  /**
   * @generated from field: string content = 2;
   */
  content: string;
};

/**
 * Describes the message model.CodeBlockNode.
 * Use `create(CodeBlockNodeSchema)` to create a new message.
 */
export const CodeBlockNodeSchema: GenMessage<CodeBlockNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 4);

/**
 * @generated from message model.HeadingNode
 */
export type HeadingNode = Message<"model.HeadingNode"> & {
  /**
   * @generated from field: int32 level = 1;
   */
  level: number;

  /**
   * @generated from field: repeated model.Node children = 2;
   */
  children: Node[];
};

/**
 * Describes the message model.HeadingNode.
 * Use `create(HeadingNodeSchema)` to create a new message.
 */
export const HeadingNodeSchema: GenMessage<HeadingNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 5);

/**
 * @generated from message model.HorizontalRuleNode
 */
export type HorizontalRuleNode = Message<"model.HorizontalRuleNode"> & {
  /**
   * @generated from field: string symbol = 1;
   */
  symbol: string;
};

/**
 * Describes the message model.HorizontalRuleNode.
 * Use `create(HorizontalRuleNodeSchema)` to create a new message.
 */
export const HorizontalRuleNodeSchema: GenMessage<HorizontalRuleNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 6);

/**
 * @generated from message model.BlockquoteNode
 */
export type BlockquoteNode = Message<"model.BlockquoteNode"> & {
  /**
   * @generated from field: repeated model.Node children = 1;
   */
  children: Node[];
};

/**
 * Describes the message model.BlockquoteNode.
 * Use `create(BlockquoteNodeSchema)` to create a new message.
 */
export const BlockquoteNodeSchema: GenMessage<BlockquoteNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 7);

/**
 * @generated from message model.ListNode
 */
export type ListNode = Message<"model.ListNode"> & {
  /**
   * @generated from field: model.ListNode.Kind kind = 1;
   */
  kind: ListNode_Kind;

  /**
   * @generated from field: int32 indent = 2;
   */
  indent: number;

  /**
   * @generated from field: repeated model.Node children = 3;
   */
  children: Node[];
};

/**
 * Describes the message model.ListNode.
 * Use `create(ListNodeSchema)` to create a new message.
 */
export const ListNodeSchema: GenMessage<ListNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 8);

/**
 * @generated from enum model.ListNode.Kind
 */
export enum ListNode_Kind {
  /**
   * @generated from enum value: KIND_UNSPECIFIED = 0;
   */
  KIND_UNSPECIFIED = 0,

  /**
   * @generated from enum value: ORDERED = 1;
   */
  ORDERED = 1,

  /**
   * @generated from enum value: UNORDERED = 2;
   */
  UNORDERED = 2,

  /**
   * @generated from enum value: DESCRIPTION = 3;
   */
  DESCRIPTION = 3,
}

/**
 * Describes the enum model.ListNode.Kind.
 */
export const ListNode_KindSchema: GenEnum<ListNode_Kind> = /*@__PURE__*/
  enumDesc(file_model_markdown, 8, 0);

/**
 * @generated from message model.OrderedListItemNode
 */
export type OrderedListItemNode = Message<"model.OrderedListItemNode"> & {
  /**
   * @generated from field: string number = 1;
   */
  number: string;

  /**
   * @generated from field: int32 indent = 2;
   */
  indent: number;

  /**
   * @generated from field: repeated model.Node children = 3;
   */
  children: Node[];
};

/**
 * Describes the message model.OrderedListItemNode.
 * Use `create(OrderedListItemNodeSchema)` to create a new message.
 */
export const OrderedListItemNodeSchema: GenMessage<OrderedListItemNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 9);

/**
 * @generated from message model.UnorderedListItemNode
 */
export type UnorderedListItemNode = Message<"model.UnorderedListItemNode"> & {
  /**
   * @generated from field: string symbol = 1;
   */
  symbol: string;

  /**
   * @generated from field: int32 indent = 2;
   */
  indent: number;

  /**
   * @generated from field: repeated model.Node children = 3;
   */
  children: Node[];
};

/**
 * Describes the message model.UnorderedListItemNode.
 * Use `create(UnorderedListItemNodeSchema)` to create a new message.
 */
export const UnorderedListItemNodeSchema: GenMessage<UnorderedListItemNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 10);

/**
 * @generated from message model.TaskListItemNode
 */
export type TaskListItemNode = Message<"model.TaskListItemNode"> & {
  /**
   * @generated from field: string symbol = 1;
   */
  symbol: string;

  /**
   * @generated from field: int32 indent = 2;
   */
  indent: number;

  /**
   * @generated from field: bool complete = 3;
   */
  complete: boolean;

  /**
   * @generated from field: repeated model.Node children = 4;
   */
  children: Node[];
};

/**
 * Describes the message model.TaskListItemNode.
 * Use `create(TaskListItemNodeSchema)` to create a new message.
 */
export const TaskListItemNodeSchema: GenMessage<TaskListItemNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 11);

/**
 * @generated from message model.MathBlockNode
 */
export type MathBlockNode = Message<"model.MathBlockNode"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;
};

/**
 * Describes the message model.MathBlockNode.
 * Use `create(MathBlockNodeSchema)` to create a new message.
 */
export const MathBlockNodeSchema: GenMessage<MathBlockNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 12);

/**
 * @generated from message model.TableNode
 */
export type TableNode = Message<"model.TableNode"> & {
  /**
   * @generated from field: repeated model.Node header = 1;
   */
  header: Node[];

  /**
   * @generated from field: repeated string delimiter = 2;
   */
  delimiter: string[];

  /**
   * @generated from field: repeated model.TableNode.Row rows = 3;
   */
  rows: TableNode_Row[];
};

/**
 * Describes the message model.TableNode.
 * Use `create(TableNodeSchema)` to create a new message.
 */
export const TableNodeSchema: GenMessage<TableNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 13);

/**
 * @generated from message model.TableNode.Row
 */
export type TableNode_Row = Message<"model.TableNode.Row"> & {
  /**
   * @generated from field: repeated model.Node cells = 1;
   */
  cells: Node[];
};

/**
 * Describes the message model.TableNode.Row.
 * Use `create(TableNode_RowSchema)` to create a new message.
 */
export const TableNode_RowSchema: GenMessage<TableNode_Row> = /*@__PURE__*/
  messageDesc(file_model_markdown, 13, 0);

/**
 * @generated from message model.EmbeddedContentNode
 */
export type EmbeddedContentNode = Message<"model.EmbeddedContentNode"> & {
  /**
   * The resource name of the embedded content.
   *
   * @generated from field: string resource_name = 1;
   */
  resourceName: string;

  /**
   * Additional parameters for the embedded content.
   *
   * @generated from field: string params = 2;
   */
  params: string;
};

/**
 * Describes the message model.EmbeddedContentNode.
 * Use `create(EmbeddedContentNodeSchema)` to create a new message.
 */
export const EmbeddedContentNodeSchema: GenMessage<EmbeddedContentNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 14);

/**
 * @generated from message model.TextNode
 */
export type TextNode = Message<"model.TextNode"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;
};

/**
 * Describes the message model.TextNode.
 * Use `create(TextNodeSchema)` to create a new message.
 */
export const TextNodeSchema: GenMessage<TextNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 15);

/**
 * @generated from message model.BoldNode
 */
export type BoldNode = Message<"model.BoldNode"> & {
  /**
   * @generated from field: string symbol = 1;
   */
  symbol: string;

  /**
   * @generated from field: repeated model.Node children = 2;
   */
  children: Node[];
};

/**
 * Describes the message model.BoldNode.
 * Use `create(BoldNodeSchema)` to create a new message.
 */
export const BoldNodeSchema: GenMessage<BoldNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 16);

/**
 * @generated from message model.ItalicNode
 */
export type ItalicNode = Message<"model.ItalicNode"> & {
  /**
   * @generated from field: string symbol = 1;
   */
  symbol: string;

  /**
   * @generated from field: repeated model.Node children = 2;
   */
  children: Node[];
};

/**
 * Describes the message model.ItalicNode.
 * Use `create(ItalicNodeSchema)` to create a new message.
 */
export const ItalicNodeSchema: GenMessage<ItalicNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 17);

/**
 * @generated from message model.BoldItalicNode
 */
export type BoldItalicNode = Message<"model.BoldItalicNode"> & {
  /**
   * @generated from field: string symbol = 1;
   */
  symbol: string;

  /**
   * @generated from field: string content = 2;
   */
  content: string;
};

/**
 * Describes the message model.BoldItalicNode.
 * Use `create(BoldItalicNodeSchema)` to create a new message.
 */
export const BoldItalicNodeSchema: GenMessage<BoldItalicNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 18);

/**
 * @generated from message model.CodeNode
 */
export type CodeNode = Message<"model.CodeNode"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;
};

/**
 * Describes the message model.CodeNode.
 * Use `create(CodeNodeSchema)` to create a new message.
 */
export const CodeNodeSchema: GenMessage<CodeNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 19);

/**
 * @generated from message model.ImageNode
 */
export type ImageNode = Message<"model.ImageNode"> & {
  /**
   * @generated from field: string alt_text = 1;
   */
  altText: string;

  /**
   * @generated from field: string url = 2;
   */
  url: string;
};

/**
 * Describes the message model.ImageNode.
 * Use `create(ImageNodeSchema)` to create a new message.
 */
export const ImageNodeSchema: GenMessage<ImageNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 20);

/**
 * @generated from message model.LinkNode
 */
export type LinkNode = Message<"model.LinkNode"> & {
  /**
   * @generated from field: repeated model.Node content = 1;
   */
  content: Node[];

  /**
   * @generated from field: string url = 2;
   */
  url: string;
};

/**
 * Describes the message model.LinkNode.
 * Use `create(LinkNodeSchema)` to create a new message.
 */
export const LinkNodeSchema: GenMessage<LinkNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 21);

/**
 * @generated from message model.AutoLinkNode
 */
export type AutoLinkNode = Message<"model.AutoLinkNode"> & {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * @generated from field: bool is_raw_text = 2;
   */
  isRawText: boolean;
};

/**
 * Describes the message model.AutoLinkNode.
 * Use `create(AutoLinkNodeSchema)` to create a new message.
 */
export const AutoLinkNodeSchema: GenMessage<AutoLinkNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 22);

/**
 * @generated from message model.TagNode
 */
export type TagNode = Message<"model.TagNode"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;
};

/**
 * Describes the message model.TagNode.
 * Use `create(TagNodeSchema)` to create a new message.
 */
export const TagNodeSchema: GenMessage<TagNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 23);

/**
 * @generated from message model.StrikethroughNode
 */
export type StrikethroughNode = Message<"model.StrikethroughNode"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;
};

/**
 * Describes the message model.StrikethroughNode.
 * Use `create(StrikethroughNodeSchema)` to create a new message.
 */
export const StrikethroughNodeSchema: GenMessage<StrikethroughNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 24);

/**
 * @generated from message model.EscapingCharacterNode
 */
export type EscapingCharacterNode = Message<"model.EscapingCharacterNode"> & {
  /**
   * @generated from field: string symbol = 1;
   */
  symbol: string;
};

/**
 * Describes the message model.EscapingCharacterNode.
 * Use `create(EscapingCharacterNodeSchema)` to create a new message.
 */
export const EscapingCharacterNodeSchema: GenMessage<EscapingCharacterNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 25);

/**
 * @generated from message model.MathNode
 */
export type MathNode = Message<"model.MathNode"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;
};

/**
 * Describes the message model.MathNode.
 * Use `create(MathNodeSchema)` to create a new message.
 */
export const MathNodeSchema: GenMessage<MathNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 26);

/**
 * @generated from message model.HighlightNode
 */
export type HighlightNode = Message<"model.HighlightNode"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;
};

/**
 * Describes the message model.HighlightNode.
 * Use `create(HighlightNodeSchema)` to create a new message.
 */
export const HighlightNodeSchema: GenMessage<HighlightNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 27);

/**
 * @generated from message model.SubscriptNode
 */
export type SubscriptNode = Message<"model.SubscriptNode"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;
};

/**
 * Describes the message model.SubscriptNode.
 * Use `create(SubscriptNodeSchema)` to create a new message.
 */
export const SubscriptNodeSchema: GenMessage<SubscriptNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 28);

/**
 * @generated from message model.SuperscriptNode
 */
export type SuperscriptNode = Message<"model.SuperscriptNode"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;
};

/**
 * Describes the message model.SuperscriptNode.
 * Use `create(SuperscriptNodeSchema)` to create a new message.
 */
export const SuperscriptNodeSchema: GenMessage<SuperscriptNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 29);

/**
 * @generated from message model.ReferencedContentNode
 */
export type ReferencedContentNode = Message<"model.ReferencedContentNode"> & {
  /**
   * The resource name of the referenced content.
   *
   * @generated from field: string resource_name = 1;
   */
  resourceName: string;

  /**
   * Additional parameters for the referenced content.
   *
   * @generated from field: string params = 2;
   */
  params: string;
};

/**
 * Describes the message model.ReferencedContentNode.
 * Use `create(ReferencedContentNodeSchema)` to create a new message.
 */
export const ReferencedContentNodeSchema: GenMessage<ReferencedContentNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 30);

/**
 * @generated from message model.SpoilerNode
 */
export type SpoilerNode = Message<"model.SpoilerNode"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;
};

/**
 * Describes the message model.SpoilerNode.
 * Use `create(SpoilerNodeSchema)` to create a new message.
 */
export const SpoilerNodeSchema: GenMessage<SpoilerNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 31);

/**
 * @generated from message model.HTMLElementNode
 */
export type HTMLElementNode = Message<"model.HTMLElementNode"> & {
  /**
   * @generated from field: string tag_name = 1;
   */
  tagName: string;

  /**
   * @generated from field: map<string, string> attributes = 2;
   */
  attributes: { [key: string]: string };
};

/**
 * Describes the message model.HTMLElementNode.
 * Use `create(HTMLElementNodeSchema)` to create a new message.
 */
export const HTMLElementNodeSchema: GenMessage<HTMLElementNode> = /*@__PURE__*/
  messageDesc(file_model_markdown, 32);

/**
 * @generated from enum model.NodeType
 */
export enum NodeType {
  /**
   * @generated from enum value: NODE_UNSPECIFIED = 0;
   */
  NODE_UNSPECIFIED = 0,

  /**
   * Block nodes.
   *
   * @generated from enum value: LINE_BREAK = 1;
   */
  LINE_BREAK = 1,

  /**
   * @generated from enum value: PARAGRAPH = 2;
   */
  PARAGRAPH = 2,

  /**
   * @generated from enum value: CODE_BLOCK = 3;
   */
  CODE_BLOCK = 3,

  /**
   * @generated from enum value: HEADING = 4;
   */
  HEADING = 4,

  /**
   * @generated from enum value: HORIZONTAL_RULE = 5;
   */
  HORIZONTAL_RULE = 5,

  /**
   * @generated from enum value: BLOCKQUOTE = 6;
   */
  BLOCKQUOTE = 6,

  /**
   * @generated from enum value: LIST = 7;
   */
  LIST = 7,

  /**
   * @generated from enum value: ORDERED_LIST_ITEM = 8;
   */
  ORDERED_LIST_ITEM = 8,

  /**
   * @generated from enum value: UNORDERED_LIST_ITEM = 9;
   */
  UNORDERED_LIST_ITEM = 9,

  /**
   * @generated from enum value: TASK_LIST_ITEM = 10;
   */
  TASK_LIST_ITEM = 10,

  /**
   * @generated from enum value: MATH_BLOCK = 11;
   */
  MATH_BLOCK = 11,

  /**
   * @generated from enum value: TABLE = 12;
   */
  TABLE = 12,

  /**
   * @generated from enum value: EMBEDDED_CONTENT = 13;
   */
  EMBEDDED_CONTENT = 13,

  /**
   * Inline nodes.
   *
   * @generated from enum value: TEXT = 51;
   */
  TEXT = 51,

  /**
   * @generated from enum value: BOLD = 52;
   */
  BOLD = 52,

  /**
   * @generated from enum value: ITALIC = 53;
   */
  ITALIC = 53,

  /**
   * @generated from enum value: BOLD_ITALIC = 54;
   */
  BOLD_ITALIC = 54,

  /**
   * @generated from enum value: CODE = 55;
   */
  CODE = 55,

  /**
   * @generated from enum value: IMAGE = 56;
   */
  IMAGE = 56,

  /**
   * @generated from enum value: LINK = 57;
   */
  LINK = 57,

  /**
   * @generated from enum value: AUTO_LINK = 58;
   */
  AUTO_LINK = 58,

  /**
   * @generated from enum value: TAG = 59;
   */
  TAG = 59,

  /**
   * @generated from enum value: STRIKETHROUGH = 60;
   */
  STRIKETHROUGH = 60,

  /**
   * @generated from enum value: ESCAPING_CHARACTER = 61;
   */
  ESCAPING_CHARACTER = 61,

  /**
   * @generated from enum value: MATH = 62;
   */
  MATH = 62,

  /**
   * @generated from enum value: HIGHLIGHT = 63;
   */
  HIGHLIGHT = 63,

  /**
   * @generated from enum value: SUBSCRIPT = 64;
   */
  SUBSCRIPT = 64,

  /**
   * @generated from enum value: SUPERSCRIPT = 65;
   */
  SUPERSCRIPT = 65,

  /**
   * @generated from enum value: REFERENCED_CONTENT = 66;
   */
  REFERENCED_CONTENT = 66,

  /**
   * @generated from enum value: SPOILER = 67;
   */
  SPOILER = 67,

  /**
   * @generated from enum value: HTML_ELEMENT = 68;
   */
  HTML_ELEMENT = 68,
}

/**
 * Describes the enum model.NodeType.
 */
export const NodeTypeSchema: GenEnum<NodeType> = /*@__PURE__*/
  enumDesc(file_model_markdown, 0);

