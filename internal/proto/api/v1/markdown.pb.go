// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/v1/markdown.proto

package v1

import (
	markdown "github.com/smartmemos/memos/internal/proto/model/markdown"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ParseMarkdownRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Markdown      string                 `protobuf:"bytes,1,opt,name=markdown,proto3" json:"markdown,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseMarkdownRequest) Reset() {
	*x = ParseMarkdownRequest{}
	mi := &file_api_v1_markdown_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseMarkdownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseMarkdownRequest) ProtoMessage() {}

func (x *ParseMarkdownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_markdown_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseMarkdownRequest.ProtoReflect.Descriptor instead.
func (*ParseMarkdownRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_markdown_proto_rawDescGZIP(), []int{0}
}

func (x *ParseMarkdownRequest) GetMarkdown() string {
	if x != nil {
		return x.Markdown
	}
	return ""
}

type ParseMarkdownResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*markdown.Node       `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseMarkdownResponse) Reset() {
	*x = ParseMarkdownResponse{}
	mi := &file_api_v1_markdown_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseMarkdownResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseMarkdownResponse) ProtoMessage() {}

func (x *ParseMarkdownResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_markdown_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseMarkdownResponse.ProtoReflect.Descriptor instead.
func (*ParseMarkdownResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_markdown_proto_rawDescGZIP(), []int{1}
}

func (x *ParseMarkdownResponse) GetNodes() []*markdown.Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type RestoreMarkdownNodesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*markdown.Node       `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreMarkdownNodesRequest) Reset() {
	*x = RestoreMarkdownNodesRequest{}
	mi := &file_api_v1_markdown_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreMarkdownNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreMarkdownNodesRequest) ProtoMessage() {}

func (x *RestoreMarkdownNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_markdown_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreMarkdownNodesRequest.ProtoReflect.Descriptor instead.
func (*RestoreMarkdownNodesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_markdown_proto_rawDescGZIP(), []int{2}
}

func (x *RestoreMarkdownNodesRequest) GetNodes() []*markdown.Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type RestoreMarkdownNodesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Markdown      string                 `protobuf:"bytes,1,opt,name=markdown,proto3" json:"markdown,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreMarkdownNodesResponse) Reset() {
	*x = RestoreMarkdownNodesResponse{}
	mi := &file_api_v1_markdown_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreMarkdownNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreMarkdownNodesResponse) ProtoMessage() {}

func (x *RestoreMarkdownNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_markdown_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreMarkdownNodesResponse.ProtoReflect.Descriptor instead.
func (*RestoreMarkdownNodesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_markdown_proto_rawDescGZIP(), []int{3}
}

func (x *RestoreMarkdownNodesResponse) GetMarkdown() string {
	if x != nil {
		return x.Markdown
	}
	return ""
}

type StringifyMarkdownNodesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*markdown.Node       `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringifyMarkdownNodesRequest) Reset() {
	*x = StringifyMarkdownNodesRequest{}
	mi := &file_api_v1_markdown_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringifyMarkdownNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringifyMarkdownNodesRequest) ProtoMessage() {}

func (x *StringifyMarkdownNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_markdown_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringifyMarkdownNodesRequest.ProtoReflect.Descriptor instead.
func (*StringifyMarkdownNodesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_markdown_proto_rawDescGZIP(), []int{4}
}

func (x *StringifyMarkdownNodesRequest) GetNodes() []*markdown.Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type StringifyMarkdownNodesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlainText     string                 `protobuf:"bytes,1,opt,name=plain_text,json=plainText,proto3" json:"plain_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringifyMarkdownNodesResponse) Reset() {
	*x = StringifyMarkdownNodesResponse{}
	mi := &file_api_v1_markdown_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringifyMarkdownNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringifyMarkdownNodesResponse) ProtoMessage() {}

func (x *StringifyMarkdownNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_markdown_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringifyMarkdownNodesResponse.ProtoReflect.Descriptor instead.
func (*StringifyMarkdownNodesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_markdown_proto_rawDescGZIP(), []int{5}
}

func (x *StringifyMarkdownNodesResponse) GetPlainText() string {
	if x != nil {
		return x.PlainText
	}
	return ""
}

type GetLinkMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Link          string                 `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLinkMetadataRequest) Reset() {
	*x = GetLinkMetadataRequest{}
	mi := &file_api_v1_markdown_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLinkMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLinkMetadataRequest) ProtoMessage() {}

func (x *GetLinkMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_markdown_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLinkMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetLinkMetadataRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_markdown_proto_rawDescGZIP(), []int{6}
}

func (x *GetLinkMetadataRequest) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

var File_api_v1_markdown_proto protoreflect.FileDescriptor

const file_api_v1_markdown_proto_rawDesc = "" +
	"\n" +
	"\x15api/v1/markdown.proto\x12\x06api.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1dmodel/markdown/markdown.proto\"2\n" +
	"\x14ParseMarkdownRequest\x12\x1a\n" +
	"\bmarkdown\x18\x01 \x01(\tR\bmarkdown\"=\n" +
	"\x15ParseMarkdownResponse\x12$\n" +
	"\x05nodes\x18\x01 \x03(\v2\x0e.markdown.NodeR\x05nodes\"C\n" +
	"\x1bRestoreMarkdownNodesRequest\x12$\n" +
	"\x05nodes\x18\x01 \x03(\v2\x0e.markdown.NodeR\x05nodes\":\n" +
	"\x1cRestoreMarkdownNodesResponse\x12\x1a\n" +
	"\bmarkdown\x18\x01 \x01(\tR\bmarkdown\"E\n" +
	"\x1dStringifyMarkdownNodesRequest\x12$\n" +
	"\x05nodes\x18\x01 \x03(\v2\x0e.markdown.NodeR\x05nodes\"?\n" +
	"\x1eStringifyMarkdownNodesResponse\x12\x1d\n" +
	"\n" +
	"plain_text\x18\x01 \x01(\tR\tplainText\",\n" +
	"\x16GetLinkMetadataRequest\x12\x12\n" +
	"\x04link\x18\x01 \x01(\tR\x04link2\x99\x04\n" +
	"\x0fMarkdownService\x12o\n" +
	"\rParseMarkdown\x12\x1c.api.v1.ParseMarkdownRequest\x1a\x1d.api.v1.ParseMarkdownResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/api/v1/markdown:parse\x12\x8b\x01\n" +
	"\x14RestoreMarkdownNodes\x12#.api.v1.RestoreMarkdownNodesRequest\x1a$.api.v1.RestoreMarkdownNodesResponse\"(\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/api/v1/markdown/node:restore\x12\x93\x01\n" +
	"\x16StringifyMarkdownNodes\x12%.api.v1.StringifyMarkdownNodesRequest\x1a&.api.v1.StringifyMarkdownNodesResponse\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/api/v1/markdown/node:stringify\x12q\n" +
	"\x0fGetLinkMetadata\x12\x1e.api.v1.GetLinkMetadataRequest\x1a\x16.markdown.LinkMetadata\"&\x82\xd3\xe4\x93\x02 \x12\x1e/api/v1/markdown/link:metadataB3Z1github.com/smartmemos/memos/internal/proto/api/v1b\x06proto3"

var (
	file_api_v1_markdown_proto_rawDescOnce sync.Once
	file_api_v1_markdown_proto_rawDescData []byte
)

func file_api_v1_markdown_proto_rawDescGZIP() []byte {
	file_api_v1_markdown_proto_rawDescOnce.Do(func() {
		file_api_v1_markdown_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_markdown_proto_rawDesc), len(file_api_v1_markdown_proto_rawDesc)))
	})
	return file_api_v1_markdown_proto_rawDescData
}

var file_api_v1_markdown_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_v1_markdown_proto_goTypes = []any{
	(*ParseMarkdownRequest)(nil),           // 0: api.v1.ParseMarkdownRequest
	(*ParseMarkdownResponse)(nil),          // 1: api.v1.ParseMarkdownResponse
	(*RestoreMarkdownNodesRequest)(nil),    // 2: api.v1.RestoreMarkdownNodesRequest
	(*RestoreMarkdownNodesResponse)(nil),   // 3: api.v1.RestoreMarkdownNodesResponse
	(*StringifyMarkdownNodesRequest)(nil),  // 4: api.v1.StringifyMarkdownNodesRequest
	(*StringifyMarkdownNodesResponse)(nil), // 5: api.v1.StringifyMarkdownNodesResponse
	(*GetLinkMetadataRequest)(nil),         // 6: api.v1.GetLinkMetadataRequest
	(*markdown.Node)(nil),                  // 7: markdown.Node
	(*markdown.LinkMetadata)(nil),          // 8: markdown.LinkMetadata
}
var file_api_v1_markdown_proto_depIdxs = []int32{
	7, // 0: api.v1.ParseMarkdownResponse.nodes:type_name -> markdown.Node
	7, // 1: api.v1.RestoreMarkdownNodesRequest.nodes:type_name -> markdown.Node
	7, // 2: api.v1.StringifyMarkdownNodesRequest.nodes:type_name -> markdown.Node
	0, // 3: api.v1.MarkdownService.ParseMarkdown:input_type -> api.v1.ParseMarkdownRequest
	2, // 4: api.v1.MarkdownService.RestoreMarkdownNodes:input_type -> api.v1.RestoreMarkdownNodesRequest
	4, // 5: api.v1.MarkdownService.StringifyMarkdownNodes:input_type -> api.v1.StringifyMarkdownNodesRequest
	6, // 6: api.v1.MarkdownService.GetLinkMetadata:input_type -> api.v1.GetLinkMetadataRequest
	1, // 7: api.v1.MarkdownService.ParseMarkdown:output_type -> api.v1.ParseMarkdownResponse
	3, // 8: api.v1.MarkdownService.RestoreMarkdownNodes:output_type -> api.v1.RestoreMarkdownNodesResponse
	5, // 9: api.v1.MarkdownService.StringifyMarkdownNodes:output_type -> api.v1.StringifyMarkdownNodesResponse
	8, // 10: api.v1.MarkdownService.GetLinkMetadata:output_type -> markdown.LinkMetadata
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_v1_markdown_proto_init() }
func file_api_v1_markdown_proto_init() {
	if File_api_v1_markdown_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_markdown_proto_rawDesc), len(file_api_v1_markdown_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_markdown_proto_goTypes,
		DependencyIndexes: file_api_v1_markdown_proto_depIdxs,
		MessageInfos:      file_api_v1_markdown_proto_msgTypes,
	}.Build()
	File_api_v1_markdown_proto = out.File
	file_api_v1_markdown_proto_goTypes = nil
	file_api_v1_markdown_proto_depIdxs = nil
}
