syntax = "proto3";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "model/memo/memo.proto";

package api.v1;
option go_package = "github.com/smartmemos/memos/internal/proto/api/v1";

service MemoService {
    // CreateMemo creates a memo.
  rpc CreateMemo(CreateMemoRequest) returns (memo.Memo) {
    option (google.api.http) = {
      post: "/api/v1/memos"
    };
  }

    // ListMemos lists memos with pagination and filter.
  rpc ListMemos(ListMemosRequest) returns (ListMemosResponse) {
    option (google.api.http) = {
      get: "/api/v1/memos"
    };
  }
  // GetMemo gets a memo.
  rpc GetMemo(GetMemoRequest) returns (memo.Memo) {
    option (google.api.http) = {get: "/api/v1/memos/*"};
  }

}


message CreateMemoRequest {
    // The memo to create.
  memo.Memo memo = 1 [(google.api.field_behavior) = REQUIRED];
}

message ListMemosRequest {

}

message ListMemosResponse {
  repeated memo.Memo memos = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

message GetMemoRequest {

}