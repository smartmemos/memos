syntax = "proto3";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "model/user/user.proto";
import "model/user/setting.proto";

package api.v1;
option go_package = "github.com/smartmemos/memos/internal/proto/api/v1";

service UserService {
  // CreateUser creates a new user.
  rpc CreateUser(CreateUserRequest) returns (user.User) {
    option (google.api.http) = {
      post: "/api/v1/user/users"
    //   body: "user"
    };
    option (google.api.method_signature) = "name,username,password";
  }

  // GetUserSetting gets the setting of a user.
  rpc GetUserSetting(GetUserSettingRequest) returns (user.Setting) {
    option (google.api.http) = {get: "/api/v1/{name=users/*}/setting"};
    option (google.api.method_signature) = "name";
  }

  // UpdateUserSetting updates the setting of a user.
  rpc UpdateUserSetting(UpdateUserSettingRequest) returns (user.Setting) {
    option (google.api.http) = {
      patch: "/api/v1/{setting.name=users/*/setting}"
      body: "setting"
    };
    option (google.api.method_signature) = "setting,update_mask";
  }

}

message CreateUserRequest {
  string name = 1;
  string username = 2;
  string email = 3;
  string nickname = 4;
  string avatar_url = 5;
  string description = 6;
  string password = 7 [(google.api.field_behavior) = INPUT_ONLY];
}

message GetUserSettingRequest {
  // The name of the user.
  string name = 1;
}

message UpdateUserSettingRequest {
  user.Setting setting = 1 [(google.api.field_behavior) = REQUIRED];

  google.protobuf.FieldMask update_mask = 2;
}
