syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "model/user.proto";

package api.v2;
option go_package = "github.com/smartmemos/memos/internal/proto/api/v2";

service UserService {
  // CreateUser creates a new user.
  rpc CreateUser(CreateUserRequest) returns (model.User) {}

    // GetUserStats returns statistics for a specific user.
  rpc GetUserStats(GetUserStatsRequest) returns (UserStats) {}

}

message CreateUserRequest {
    // Required. The user to create.
    model.User user = 1;
}

message GetUserStatsRequest {
  // Required. The resource name of the user.
  // Format: users/{user}
  string name = 1;
}

// User statistics messages
message UserStats {
  // The resource name of the user whose stats these are.
  // Format: users/{user}
  string name = 1;

  // The timestamps when the memos were displayed.
  repeated google.protobuf.Timestamp memo_display_timestamps = 2;

  // The stats of memo types.
  MemoTypeStats memo_type_stats = 3;

  // The count of tags.
  map<string, int32> tag_count = 4;

  // The pinned memos of the user.
  repeated string pinned_memos = 5;

  // Total memo count.
  int32 total_memo_count = 6;

  // Memo type statistics.
  message MemoTypeStats {
    int32 link_count = 1;
    int32 code_count = 2;
    int32 todo_count = 3;
    int32 undo_count = 4;
  }
}